{"remainingRequest":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\components\\SubComponents\\ColorSwatch.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\components\\SubComponents\\ColorSwatch.vue","mtime":1631030779453},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIGV4cG9ydCBkZWZhdWx0IHsNCiAgICBpbmplY3Q6IFsnc3RvcmUnXSwNCiAgICBwcm9wczogWydpZCddLA0KICAgIGNvbXB1dGVkOiB7DQogICAgICBjb2xvclZhbHVlOiBmdW5jdGlvbigpIHsNCiAgICAgICAgbGV0IHN0YXRlcyA9ICh0aGlzLmlkID4gOTkgJiYgdGhpcy5pZCA8IDk5OTkpID8gdGhpcy5zdG9yZS5jYWNoZS5zdGF0ZXMgOiB0aGlzLnN0b3JlLnN0YXRlcy5jdXJyZW50DQogICAgICAgIGxldCBzZXQgPSBzdGF0ZXMuZmluZChvID0+IG8uaWQgPT0gdGhpcy5pZCkNCiAgICAgICAgaWYgKHNldCkgew0KICAgICAgICAgIHJldHVybiBzZXQuY29sb3INCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gJyNGRjAwMDAnDQogICAgICB9DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICBvbkNoYW5nZTogZnVuY3Rpb24oZSkgew0KICAgICAgICB0aGlzLnN0b3JlLm1ldGhvZHMubmV3Q3VycmVudChlLnRhcmdldC52YWx1ZSwgdGhpcy5pZCwgJ2NvbG9yJykNCiAgICAgIH0NCiAgICB9LA0KICB9DQo="},{"version":3,"sources":["C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\components\\SubComponents\\ColorSwatch.vue"],"names":[],"mappings":";EAKE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACrB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;UACP,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjB;QACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjB;IACF,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChE;IACF,CAAC;EACH","file":"C:/Users/JThorneUMN/Documents/GitHub/dendro-plots/src/components/SubComponents/ColorSwatch.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <input type=\"color\" class=\"color-input\" :value=\"colorValue\" @change=\"onChange\">\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    inject: ['store'],\r\n    props: ['id'],\r\n    computed: {\r\n      colorValue: function() {\r\n        let states = (this.id > 99 && this.id < 9999) ? this.store.cache.states : this.store.states.current\r\n        let set = states.find(o => o.id == this.id)\r\n        if (set) {\r\n          return set.color\r\n        }\r\n        return '#FF0000'\r\n      }\r\n    },\r\n    methods: {\r\n      onChange: function(e) {\r\n        this.store.methods.newCurrent(e.target.value, this.id, 'color')\r\n      }\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  input[type=\"color\"] {\r\n    -webkit-appearance: none;\r\n    width: 16px;\r\n    height: 16px;\r\n    padding: 0;\r\n    border: none;\r\n    margin-top: 2px;\r\n    margin-bottom: 2px;\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    position: fixed;\r\n  }\r\n\r\n  input[type=\"color\"]::-webkit-color-swatch-wrapper {\r\n    padding: 0;\r\n  }\r\n\r\n  input[type=\"color\"]::-webkit-color-swatch {\r\n    border: 1px solid black;\r\n    border-radius: 5px;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  input[type=\"color\"]::-moz-color-swatch {\r\n    border: 1px solid black;\r\n    border-radius: 5px;\r\n    padding: 0;\r\n    margin: 0;\r\n    border-radius: 5px;\r\n  }\r\n</style>\r\n"]}]}