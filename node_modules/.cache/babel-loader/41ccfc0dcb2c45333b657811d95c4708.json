{"remainingRequest":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\modules\\store.js","dependencies":[{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\modules\\store.js","mtime":1630612399713},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L1VzZXJzL0pUaG9ybmVVTU4vRG9jdW1lbnRzL0dpdEh1Yi9kZW5kcm8tcGxvdHMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyI7CmltcG9ydCB7IHJlYWN0aXZlIH0gZnJvbSAndnVlJzsKdmFyIHN0YXRlcyA9IHJlYWN0aXZlKHsKICBwYXN0OiBbXSwKICBjdXJyZW50OiBbXSwKICBmdXR1cmU6IFtdCn0pOwp2YXIgY2FjaGUgPSByZWFjdGl2ZSh7CiAgcmF3OiBbXSwKICBzcGxpbmVzOiB7CiAgICByYXc6IFtdLAogICAgaW5kZXg6IFtdCiAgfSwKICBpbmRleDogW10sCiAgbW9kYWxzOiBbXSwKICBwbG90czogW3sKICAgIHZhbHVlOiAxLAogICAgbmFtZTogJ1Bsb3QgMScKICB9LCB7CiAgICB2YWx1ZTogMiwKICAgIG5hbWU6ICdQbG90IDInCiAgfV0sCiAgbG9hZFNlcXVlbmNlOiBbXQp9KTsKdmFyIG1ldGhvZHMgPSB7CiAgbG9hZERhdGE6IGZ1bmN0aW9uIGxvYWREYXRhKGRhdGEpIHsKICAgIHZhciBjb2xvcnMgPSBbJyMxZjc3YjQnLCAvLyBtdXRlZCBibHVlCiAgICAnI2ZmN2YwZScsIC8vIHNhZmV0eSBvcmFuZ2UKICAgICcjMmNhMDJjJywgLy8gY29va2VkIGFzcGFyYWd1cyBncmVlbgogICAgJyNkNjI3MjgnLCAvLyBicmljayByZWQKICAgICcjOTQ2N2JkJywgLy8gbXV0ZWQgcHVycGxlCiAgICAnIzhjNTY0YicsIC8vIGNoZXN0bnV0IGJyb3duCiAgICAnI2UzNzdjMicsIC8vIHJhc3BiZXJyeSB5b2d1cnQgcGluawogICAgJyM3ZjdmN2YnLCAvLyBtaWRkbGUgZ3JheQogICAgJyNiY2JkMjInLCAvLyBjdXJyeSB5ZWxsb3ctZ3JlZW4KICAgICcjMTdiZWNmJyAvLyBibHVlLXRlYWwKICAgIF07CiAgICB2YXIgc2hhcGVzID0gWydjaXJjbGUnLCAndHJpYW5nbGUtdXAnLCAndHJpYW5nbGUtZG93bicsICdzcXVhcmUnLCAnZGlhbW9uZCcsICdjaXJjbGUtb3BlbicsICd0cmlhbmdsZS11cC1vcGVuJywgJ3RyaWFuZ2xlLWRvd24tb3BlbicsICdzcXVhcmUtb3BlbicsICdkaWFtb25kLW9wZW4nXTsKICAgIHZhciBjb2xvckluZGV4ID0gMDsKICAgIHZhciBzaGFwZUluZGV4ID0gMDsKICAgIHRoaXMuc2F2ZUN1cnJlbnQoKTsKCiAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZGF0YSksCiAgICAgICAgX3N0ZXA7CgogICAgdHJ5IHsKICAgICAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoKSB7CiAgICAgICAgdmFyIHNldCA9IF9zdGVwLnZhbHVlOwoKICAgICAgICBpZiAoY29sb3JJbmRleCA9PSBjb2xvcnMubGVuZ3RoKSB7CiAgICAgICAgICBjb2xvckluZGV4ID0gMDsKICAgICAgICB9CgogICAgICAgIGlmIChzaGFwZUluZGV4ID09IHNoYXBlcy5sZW5ndGgpIHsKICAgICAgICAgIHNoYXBlSW5kZXggPSAwOwogICAgICAgIH0KCiAgICAgICAgdmFyIGV4aXN0aW5nU2V0ID0gc3RhdGVzLmN1cnJlbnQuZmluZChmdW5jdGlvbiAob2JqKSB7CiAgICAgICAgICByZXR1cm4gb2JqLm5hbWUgPT0gc2V0Lm5hbWU7CiAgICAgICAgfSk7CgogICAgICAgIGlmIChleGlzdGluZ1NldCkgewogICAgICAgICAgdmFyIG4gPSBzdGF0ZXMuY3VycmVudC5maWx0ZXIoZnVuY3Rpb24gKG9iaikgewogICAgICAgICAgICByZXR1cm4gb2JqLm5hbWUuc3BsaXQoJyAoJylbMF0gPT0gc2V0Lm5hbWU7CiAgICAgICAgICB9KS5sZW5ndGg7CiAgICAgICAgICBzZXQubmFtZSA9IHNldC5uYW1lICsgJyAoJyArIG4gKyAnKSc7CiAgICAgICAgfQoKICAgICAgICB2YXIgbmV3U3RhdGUgPSBuZXcgT2JqZWN0KCk7IC8vIHNldCBJRHMgYXJlIHJhbmRvbSA1IGRpZ2l0IG51bWJlcnMKCiAgICAgICAgdmFyIGlkID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKDk5OTk5IC0gMTAwMDAgKyAxKSkgKyAxMDAwMDsgLy8gZGVmYXVsdCBzdGF0ZSB2YWx1ZXMKCiAgICAgICAgbmV3U3RhdGUuaWQgPSBpZDsKICAgICAgICBuZXdTdGF0ZS5uYW1lID0gc2V0Lm5hbWU7CiAgICAgICAgbmV3U3RhdGUuZmlsZSA9IHNldC5maWxlTmFtZTsKICAgICAgICBuZXdTdGF0ZS5jb2xvciA9IGNvbG9yc1tjb2xvckluZGV4XTsKICAgICAgICBjb2xvckluZGV4Kys7CiAgICAgICAgbmV3U3RhdGUuc2hhcGUgPSBzaGFwZVtzaGFwZUluZGV4XTsKICAgICAgICBzaGFwZUluZGV4Kys7CiAgICAgICAgbmV3U3RhdGUuY29sb3JTdGF0ZSA9IHRydWU7CiAgICAgICAgbmV3U3RhdGUucmF3UG9pbnRzQWN0aXZlID0gZmFsc2U7CiAgICAgICAgbmV3U3RhdGUucmF3U3BsaW5lRnJlcSA9IGZhbHNlOwogICAgICAgIG5ld1N0YXRlLnJhd1Bsb3RMb2NhdGlvbiA9IDE7CiAgICAgICAgbmV3U3RhdGUuaW5kZXhQb2ludHNGcmVxID0gZmFsc2U7CiAgICAgICAgbmV3U3RhdGUuaW5kZXhTcGxpbmVGcmVxID0gZmFsc2U7CiAgICAgICAgbmV3U3RhdGUuaW5kZXhQbG90TG9jYXRpb24gPSAxOwogICAgICAgIHN0YXRlcy5jdXJyZW50LnB1c2gobmV3U3RhdGUpOyAvLyBjYWNoZSBkYXRhCgogICAgICAgIHZhciBuZXdQb2ludHMgPSBuZXcgT2JqZWN0KCk7CiAgICAgICAgbmV3UG9pbnRzLmlkID0gaWQ7CiAgICAgICAgbmV3UG9pbnRzLnggPSBzZXQueDsKICAgICAgICBuZXdQb2ludHMueSA9IHNldC55OwogICAgICAgIGNhY2hlLnJhdy5wdXNoKG5ld1BvaW50cyk7IC8vIGRlZmF1bHQgYWN0aXZlIGNhY2hlIHZhbHVlcwoKICAgICAgICB2YXIgbmV3TW9kYWwgPSBuZXcgT2JqZWN0KCk7CiAgICAgICAgbmV3TW9kYWwuaWQgPSBpZDsKICAgICAgICBuZXdNb2RhbC5hY3RpdmUgPSBmYWxzZTsKICAgICAgICBuZXdNb2RhbC50b3AgPSAwOwogICAgICAgIG5ld01vZGFsLm91dE9mQm91bmRzID0gZmFsc2U7CiAgICAgICAgY2FjaGUubW9kYWxzLnB1c2gobmV3TW9kYWwpOyAvLyBlc3RhYmxpc2ggZGVmYXVsdCBsb2FkIHNlcXVlbmNlCgogICAgICAgIGNhY2hlLmxvYWRTZXF1ZW5jZS5wdXNoKG5ld1N0YXRlLmlkKTsKICAgICAgfTsKCiAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgX2xvb3AoKTsKICAgICAgfQogICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICB9IGZpbmFsbHkgewogICAgICBfaXRlcmF0b3IuZigpOwogICAgfQogIH0sCiAgYWRkVG86IGZ1bmN0aW9uIGFkZFRvKGRhdGEsIHByb3BlcnR5KSB7CiAgICBzdGF0ZXNbcHJvcGVydHldLnB1c2goZGF0YSk7CiAgfSwKICB1bmRvOiBmdW5jdGlvbiB1bmRvKCkgewogICAgdmFyIHJlY2VudFN0YXRlID0gc3RhdGVzLnBhc3Rbc3RhdGVzLnBhc3QubGVuZ3RoIC0gMV07CiAgICBzdGF0ZXMucGFzdC5wb3AoKTsKICAgIHRoaXMuYWRkVG8oc3RhdGVzLmN1cnJlbnQsICdmdXR1cmUnKTsKICAgIHN0YXRlcy5jdXJyZW50ID0gcmVjZW50U3RhdGU7CiAgfSwKICByZWRvOiBmdW5jdGlvbiByZWRvKCkgewogICAgdmFyIHJlY2VudFN0YXRlID0gc3RhdGVzLmZ1dHVyZVtzdGF0ZXMuZnV0dXJlLmxlbmd0aCAtIDFdOwogICAgc3RhdGVzLmZ1dHVyZS5wb3AoKTsKICAgIHRoaXMuYWRkVG8oc3RhdGVzLmN1cnJlbnQsICdwYXN0Jyk7CiAgICBzdGF0ZXMuY3VycmVudCA9IHJlY2VudFN0YXRlOwogIH0sCiAgc2F2ZUN1cnJlbnQ6IGZ1bmN0aW9uIHNhdmVDdXJyZW50KCkgewogICAgc3RhdGVzLmZ1dHVyZSA9IFtdOwogICAgdmFyIGN1cnJlbnRDb3B5ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShzdGF0ZXMuY3VycmVudCkpOwogICAgc3RhdGVzLnBhc3QucHVzaChjdXJyZW50Q29weSk7CiAgfSwKICBuZXdDdXJyZW50OiBmdW5jdGlvbiBuZXdDdXJyZW50KGRhdGEsIGlkLCBwcm9wZXJ0eSkgewogICAgdGhpcy5zYXZlQ3VycmVudCgpOwoKICAgIGlmIChpZCAmJiBwcm9wZXJ0eSkgewogICAgICB2YXIgY3VycmVudFNldCA9IHN0YXRlcy5jdXJyZW50LmZpbmQoZnVuY3Rpb24gKG9iaikgewogICAgICAgIHJldHVybiBvYmouaWQgPT0gaWQ7CiAgICAgIH0pOwogICAgICBjdXJyZW50U2V0W3Byb3BlcnR5XSA9IGRhdGE7CiAgICB9IGVsc2UgewogICAgICBzdGF0ZXMuY3VycmVudCA9IGRhdGE7CiAgICB9CiAgfSwKICBtb2RpZnlDdXJyZW50OiBmdW5jdGlvbiBtb2RpZnlDdXJyZW50KGRhdGEsIGlkLCBwcm9wZXJ0eSkgewogICAgdmFyIGN1cnJlbnRTZXQgPSBzdGF0ZXMuY3VycmVudC5maW5kKGZ1bmN0aW9uIChvYmopIHsKICAgICAgcmV0dXJuIG9iai5pZCA9PSBpZDsKICAgIH0pOwogICAgY3VycmVudFNldFtwcm9wZXJ0eV0gPSBkYXRhOwogIH0sCiAgcmVtb3ZlQ3VycmVudDogZnVuY3Rpb24gcmVtb3ZlQ3VycmVudChpZCkgewogICAgdGhpcy5zYXZlQ3VycmVudCgpOwogICAgdmFyIHNldEluZGV4ID0gc3RhdGVzLmN1cnJlbnQuZmluZEluZGV4KGZ1bmN0aW9uIChvYmopIHsKICAgICAgcmV0dXJuIG9iai5pZCA9PSBpZDsKICAgIH0pOwogICAgc3RhdGVzLmN1cnJlbnQuc3BsaWNlKHNldEluZGV4LCAxKTsKICB9LAogIHVwZGF0ZUNhY2hlOiBmdW5jdGlvbiB1cGRhdGVDYWNoZShuYW1lLCBpZCwgcHJvcCwgZGF0YSkgewogICAgdmFyIG9iaiA9IGNhY2hlW25hbWVdLmZpbmQoZnVuY3Rpb24gKG8pIHsKICAgICAgcmV0dXJuIG8uaWQgPT0gaWQ7CiAgICB9KTsKICAgIG9ialtwcm9wXSA9IGRhdGE7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGVzOiBzdGF0ZXMsCiAgY2FjaGU6IGNhY2hlLAogIG1ldGhvZHM6IG1ldGhvZHMKfTs="},{"version":3,"sources":["C:/Users/JThorneUMN/Documents/GitHub/dendro-plots/src/modules/store.js"],"names":["reactive","states","past","current","future","cache","raw","splines","index","modals","plots","value","name","loadSequence","methods","loadData","data","colors","shapes","colorIndex","shapeIndex","saveCurrent","set","length","existingSet","find","obj","n","filter","split","newState","Object","id","Math","floor","random","file","fileName","color","shape","colorState","rawPointsActive","rawSplineFreq","rawPlotLocation","indexPointsFreq","indexSplineFreq","indexPlotLocation","push","newPoints","x","y","newModal","active","top","outOfBounds","addTo","property","undo","recentState","pop","redo","currentCopy","JSON","parse","stringify","newCurrent","currentSet","modifyCurrent","removeCurrent","setIndex","findIndex","splice","updateCache","prop","o"],"mappings":"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","sourcesContent":["import { reactive } from 'vue'\r\n\r\nconst states = reactive({\r\n  past: [],\r\n  current: [],\r\n  future: [],\r\n})\r\n\r\n\r\nconst cache = reactive({\r\n  raw: [],\r\n  splines: {\r\n              raw: [],\r\n              index: [],\r\n           },\r\n  index: [],\r\n  modals: [],\r\n  plots: [{ value: 1, name: 'Plot 1' },\r\n          { value: 2, name: 'Plot 2' }],\r\n  loadSequence: [],\r\n})\r\n\r\nconst methods = {\r\n  loadData: function(data) {\r\n      let colors = [\r\n        '#1f77b4',  // muted blue\r\n        '#ff7f0e',  // safety orange\r\n        '#2ca02c',  // cooked asparagus green\r\n        '#d62728',  // brick red\r\n        '#9467bd',  // muted purple\r\n        '#8c564b',  // chestnut brown\r\n        '#e377c2',  // raspberry yogurt pink\r\n        '#7f7f7f',  // middle gray\r\n        '#bcbd22',  // curry yellow-green\r\n        '#17becf'   // blue-teal\r\n      ]\r\n      let shapes = [\r\n        'circle',\r\n        'triangle-up',\r\n        'triangle-down',\r\n        'square',\r\n        'diamond',\r\n        'circle-open',\r\n        'triangle-up-open',\r\n        'triangle-down-open',\r\n        'square-open',\r\n        'diamond-open',\r\n      ]\r\n      let colorIndex = 0\r\n      let shapeIndex = 0\r\n\r\n    this.saveCurrent()\r\n\r\n    for (const set of data) {\r\n      if (colorIndex == colors.length) {\r\n        colorIndex = 0\r\n      }\r\n      if (shapeIndex == shapes.length) {\r\n        shapeIndex = 0\r\n      }\r\n\r\n      let existingSet = states.current.find(obj => obj.name == set.name)\r\n      if (existingSet) {\r\n        let n = states.current.filter(obj => obj.name.split(' (')[0] == set.name).length\r\n        set.name = set.name + ' (' + n + ')'\r\n      }\r\n\r\n      let newState = new Object()\r\n      // set IDs are random 5 digit numbers\r\n      let id = Math.floor(Math.random() * (99999 - 10000 + 1)) + 10000\r\n\r\n      // default state values\r\n      newState.id = id\r\n      newState.name = set.name\r\n      newState.file = set.fileName\r\n      newState.color = colors[colorIndex]\r\n      colorIndex++\r\n      newState.shape = shape[shapeIndex]\r\n      shapeIndex++\r\n      newState.colorState = true\r\n\r\n      newState.rawPointsActive = false\r\n      newState.rawSplineFreq = false\r\n      newState.rawPlotLocation = 1\r\n\r\n      newState.indexPointsFreq = false\r\n      newState.indexSplineFreq = false\r\n      newState.indexPlotLocation = 1\r\n\r\n      states.current.push(newState)\r\n\r\n      // cache data\r\n      let newPoints = new Object()\r\n      newPoints.id = id\r\n      newPoints.x = set.x\r\n      newPoints.y = set.y\r\n      cache.raw.push(newPoints)\r\n\r\n      // default active cache values\r\n      let newModal = new Object()\r\n      newModal.id = id\r\n      newModal.active = false\r\n      newModal.top = 0\r\n      newModal.outOfBounds = false\r\n      cache.modals.push(newModal)\r\n\r\n      // establish default load sequence\r\n      cache.loadSequence.push(newState.id)\r\n    }\r\n  },\r\n  addTo: function(data, property) {\r\n    states[property].push(data)\r\n  },\r\n  undo: function() {\r\n    let recentState = states.past[states.past.length - 1]\r\n    states.past.pop()\r\n    this.addTo(states.current, 'future')\r\n    states.current = recentState\r\n  },\r\n  redo: function() {\r\n    let recentState = states.future[states.future.length - 1]\r\n    states.future.pop()\r\n    this.addTo(states.current, 'past')\r\n    states.current = recentState\r\n  },\r\n  saveCurrent: function() {\r\n    states.future = []\r\n    let currentCopy = JSON.parse(JSON.stringify(states.current))\r\n    states.past.push(currentCopy)\r\n  },\r\n  newCurrent: function(data, id, property) {\r\n    this.saveCurrent()\r\n    if (id && property) {\r\n      let currentSet = states.current.find(obj => obj.id == id)\r\n      currentSet[property] = data\r\n    } else {\r\n      states.current = data\r\n    }\r\n  },\r\n  modifyCurrent: function(data, id, property) {\r\n    let currentSet = states.current.find(obj => obj.id == id)\r\n    currentSet[property] = data\r\n  },\r\n  removeCurrent: function(id) {\r\n    this.saveCurrent()\r\n    let setIndex = states.current.findIndex(obj => obj.id == id)\r\n    states.current.splice(setIndex, 1)\r\n  },\r\n  updateCache: function(name, id, prop, data) {\r\n    let obj = cache[name].find(o => o.id == id)\r\n    obj[prop] = data\r\n  }\r\n}\r\n\r\nexport default {\r\n  states,\r\n  cache,\r\n  methods\r\n}\r\n"]}]}