{"remainingRequest":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\modules\\store.js","dependencies":[{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\modules\\store.js","mtime":1630698365767},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L1VzZXJzL0pUaG9ybmVVTU4vRG9jdW1lbnRzL0dpdEh1Yi9kZW5kcm8tcGxvdHMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgeyByZWFjdGl2ZSB9IGZyb20gJ3Z1ZSc7CnZhciBzdGF0ZXMgPSByZWFjdGl2ZSh7CiAgcGFzdDogW10sCiAgY3VycmVudDogW10sCiAgZnV0dXJlOiBbXQp9KTsKdmFyIGNhY2hlID0gcmVhY3RpdmUoewogIHJhdzogW10sCiAgc3BsaW5lczogewogICAgcmF3OiBbXSwKICAgIGluZGV4OiBbXQogIH0sCiAgaW5kZXg6IFtdLAogIG1vZGFsczogW10sCiAgcGxvdHM6IFt7CiAgICB2YWx1ZTogMSwKICAgIG5hbWU6ICdQbG90IDEnCiAgfSwgewogICAgdmFsdWU6IDIsCiAgICBuYW1lOiAnUGxvdCAyJwogIH1dLAogIGxvYWRTZXF1ZW5jZTogW10sCiAgY29sb3JzOiBbJyMxZjc3YjQnLCAvLyBtdXRlZCBibHVlCiAgJyNmZjdmMGUnLCAvLyBzYWZldHkgb3JhbmdlCiAgJyMyY2EwMmMnLCAvLyBjb29rZWQgYXNwYXJhZ3VzIGdyZWVuCiAgJyNkNjI3MjgnLCAvLyBicmljayByZWQKICAnIzk0NjdiZCcsIC8vIG11dGVkIHB1cnBsZQogICcjOGM1NjRiJywgLy8gY2hlc3RudXQgYnJvd24KICAnI2UzNzdjMicsIC8vIHJhc3BiZXJyeSB5b2d1cnQgcGluawogICcjN2Y3ZjdmJywgLy8gbWlkZGxlIGdyYXkKICAnI2JjYmQyMicsIC8vIGN1cnJ5IHllbGxvdy1ncmVlbgogICcjMTdiZWNmJyAvLyBibHVlLXRlYWwKICBdLAogIHNoYXBlczogW3sKICAgIHZhbHVlOiBmYWxzZSwKICAgIG5hbWU6ICdOb25lJwogIH0sIHsKICAgIHZhbHVlOiAnY2lyY2xlJywKICAgIG5hbWU6ICdDaXJjbGUnCiAgfSwgewogICAgdmFsdWU6ICd0cmlhbmdsZS11cCcsCiAgICBuYW1lOiAnVHJpYW5nbGUnCiAgfSwgewogICAgdmFsdWU6ICd0cmlhbmdsZS1kb3duJywKICAgIG5hbWU6ICdJbnZlcnNlIFRyaWFuZ2xlJwogIH0sIHsKICAgIHZhbHVlOiAnc3F1YXJlJywKICAgIG5hbWU6ICdTcXVhcmUnCiAgfSwgewogICAgdmFsdWU6ICdkaWFtb25kJywKICAgIG5hbWU6ICdEaWFtb25kJwogIH0sIHsKICAgIHZhbHVlOiAnY2lyY2xlLW9wZW4nLAogICAgbmFtZTogJ09wZW4gQ2lyY2xlJwogIH0sIHsKICAgIHZhbHVlOiAndHJpYW5nbGUtdXAtb3BlbicsCiAgICBuYW1lOiAnT3BlbiBUcmlhbmdsZScKICB9LCB7CiAgICB2YWx1ZTogJ3RyaWFuZ2xlLWRvd24tb3BlbicsCiAgICBuYW1lOiAnT3BlbiBJbnZlcnNlIFRyaWFuZ2xlJwogIH0sIHsKICAgIHZhbHVlOiAnc3F1YXJlLW9wZW4nLAogICAgbmFtZTogJ09wZW4gU3F1YXJlJwogIH0sIHsKICAgIHZhbHVlOiAnZGlhbW9uZC1vcGVuJywKICAgIG5hbWU6ICdPcGVuIERpYW1vbmQnCiAgfV0KfSk7CnZhciBtZXRob2RzID0gewogIGxvYWREYXRhOiBmdW5jdGlvbiBsb2FkRGF0YShkYXRhKSB7CiAgICB2YXIgY29sb3JJbmRleCA9IDA7CiAgICB2YXIgc2hhcGVJbmRleCA9IDA7CiAgICB0aGlzLnNhdmVDdXJyZW50KCk7CgogICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGRhdGEpLAogICAgICAgIF9zdGVwOwoKICAgIHRyeSB7CiAgICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKCkgewogICAgICAgIHZhciBzZXQgPSBfc3RlcC52YWx1ZTsKCiAgICAgICAgaWYgKGNvbG9ySW5kZXggPT0gY2FjaGUuY29sb3JzLmxlbmd0aCkgewogICAgICAgICAgY29sb3JJbmRleCA9IDA7CiAgICAgICAgfQoKICAgICAgICBpZiAoc2hhcGVJbmRleCA9PSBjYWNoZS5zaGFwZXMubGVuZ3RoKSB7CiAgICAgICAgICBzaGFwZUluZGV4ID0gMDsKICAgICAgICB9CgogICAgICAgIHZhciBleGlzdGluZ1NldCA9IHN0YXRlcy5jdXJyZW50LmZpbmQoZnVuY3Rpb24gKG9iaikgewogICAgICAgICAgcmV0dXJuIG9iai5uYW1lID09IHNldC5uYW1lOwogICAgICAgIH0pOwoKICAgICAgICBpZiAoZXhpc3RpbmdTZXQpIHsKICAgICAgICAgIHZhciBuID0gc3RhdGVzLmN1cnJlbnQuZmlsdGVyKGZ1bmN0aW9uIChvYmopIHsKICAgICAgICAgICAgcmV0dXJuIG9iai5uYW1lLnNwbGl0KCcgKCcpWzBdID09IHNldC5uYW1lOwogICAgICAgICAgfSkubGVuZ3RoOwogICAgICAgICAgc2V0Lm5hbWUgPSBzZXQubmFtZSArICcgKCcgKyBuICsgJyknOwogICAgICAgIH0KCiAgICAgICAgdmFyIG5ld1N0YXRlID0gbmV3IE9iamVjdCgpOyAvLyBzZXQgSURzIGFyZSByYW5kb20gNSBkaWdpdCBudW1iZXJzCgogICAgICAgIHZhciBpZCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqICg5OTk5OSAtIDEwMDAwICsgMSkpICsgMTAwMDA7CgogICAgICAgIHdoaWxlIChzdGF0ZXMuY3VycmVudC5zb21lKGZ1bmN0aW9uIChvKSB7CiAgICAgICAgICByZXR1cm4gby5pZCA9PSBpZDsKICAgICAgICB9KSkgewogICAgICAgICAgaWQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoOTk5OTkgLSAxMDAwMCArIDEpKSArIDEwMDAwOwogICAgICAgIH0gLy8gZGVmYXVsdCBzdGF0ZSB2YWx1ZXMKCgogICAgICAgIG5ld1N0YXRlLmlkID0gaWQ7CiAgICAgICAgbmV3U3RhdGUubmFtZSA9IHNldC5uYW1lOwogICAgICAgIG5ld1N0YXRlLmZpbGUgPSBzZXQuZmlsZU5hbWU7CiAgICAgICAgbmV3U3RhdGUuY29sb3IgPSBjYWNoZS5jb2xvcnNbY29sb3JJbmRleF07CiAgICAgICAgY29sb3JJbmRleCsrOwogICAgICAgIG5ld1N0YXRlLnNoYXBlID0gY2FjaGUuc2hhcGVzW3NoYXBlSW5kZXhdLnZhbHVlOwogICAgICAgIHNoYXBlSW5kZXgrKzsKICAgICAgICBuZXdTdGF0ZS5hcHBseUNvbG9yVG9SYXcgPSB0cnVlOwogICAgICAgIG5ld1N0YXRlLnJhd1BvaW50c0FjdGl2ZSA9IGZhbHNlOwogICAgICAgIG5ld1N0YXRlLnJhd1NwbGluZUZyZXEgPSBmYWxzZTsKICAgICAgICBuZXdTdGF0ZS5yYXdQbG90TG9jYXRpb24gPSAxOwogICAgICAgIG5ld1N0YXRlLmluZGV4UG9pbnRzRnJlcSA9IGZhbHNlOwogICAgICAgIG5ld1N0YXRlLmluZGV4U3BsaW5lRnJlcSA9IGZhbHNlOwogICAgICAgIG5ld1N0YXRlLmluZGV4UGxvdExvY2F0aW9uID0gMTsKICAgICAgICBzdGF0ZXMuY3VycmVudC5wdXNoKG5ld1N0YXRlKTsgLy8gY2FjaGUgZGF0YQoKICAgICAgICB2YXIgbmV3UG9pbnRzID0gbmV3IE9iamVjdCgpOwogICAgICAgIG5ld1BvaW50cy5pZCA9IGlkOwogICAgICAgIG5ld1BvaW50cy54ID0gc2V0Lng7CiAgICAgICAgbmV3UG9pbnRzLnkgPSBzZXQueTsKICAgICAgICBjYWNoZS5yYXcucHVzaChuZXdQb2ludHMpOyAvLyBkZWZhdWx0IGFjdGl2ZSBjYWNoZSB2YWx1ZXMKCiAgICAgICAgdmFyIG5ld01vZGFsID0gbmV3IE9iamVjdCgpOwogICAgICAgIG5ld01vZGFsLmlkID0gaWQ7CiAgICAgICAgbmV3TW9kYWwuYWN0aXZlID0gZmFsc2U7CiAgICAgICAgbmV3TW9kYWwudG9wID0gMDsKICAgICAgICBuZXdNb2RhbC5vdXRPZkJvdW5kcyA9IGZhbHNlOwogICAgICAgIGNhY2hlLm1vZGFscy5wdXNoKG5ld01vZGFsKTsgLy8gZXN0YWJsaXNoIGRlZmF1bHQgbG9hZCBzZXF1ZW5jZQoKICAgICAgICBjYWNoZS5sb2FkU2VxdWVuY2UucHVzaChuZXdTdGF0ZS5pZCk7CiAgICAgIH07CgogICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgIF9sb29wKCk7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgfSBmaW5hbGx5IHsKICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgIH0KICB9LAogIGFkZFRvOiBmdW5jdGlvbiBhZGRUbyhkYXRhLCBwcm9wZXJ0eSkgewogICAgc3RhdGVzW3Byb3BlcnR5XS5wdXNoKGRhdGEpOwogIH0sCiAgdW5kbzogZnVuY3Rpb24gdW5kbygpIHsKICAgIHZhciByZWNlbnRTdGF0ZSA9IHN0YXRlcy5wYXN0W3N0YXRlcy5wYXN0Lmxlbmd0aCAtIDFdOwogICAgc3RhdGVzLnBhc3QucG9wKCk7CiAgICB0aGlzLmFkZFRvKHN0YXRlcy5jdXJyZW50LCAnZnV0dXJlJyk7CiAgICBzdGF0ZXMuY3VycmVudCA9IHJlY2VudFN0YXRlOwogIH0sCiAgcmVkbzogZnVuY3Rpb24gcmVkbygpIHsKICAgIHZhciByZWNlbnRTdGF0ZSA9IHN0YXRlcy5mdXR1cmVbc3RhdGVzLmZ1dHVyZS5sZW5ndGggLSAxXTsKICAgIHN0YXRlcy5mdXR1cmUucG9wKCk7CiAgICB0aGlzLmFkZFRvKHN0YXRlcy5jdXJyZW50LCAncGFzdCcpOwogICAgc3RhdGVzLmN1cnJlbnQgPSByZWNlbnRTdGF0ZTsKICB9LAogIHNhdmVDdXJyZW50OiBmdW5jdGlvbiBzYXZlQ3VycmVudCgpIHsKICAgIHN0YXRlcy5mdXR1cmUgPSBbXTsKICAgIHZhciBjdXJyZW50Q29weSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoc3RhdGVzLmN1cnJlbnQpKTsKICAgIHN0YXRlcy5wYXN0LnB1c2goY3VycmVudENvcHkpOwogIH0sCiAgbmV3Q3VycmVudDogZnVuY3Rpb24gbmV3Q3VycmVudChkYXRhLCBpZCwgcHJvcGVydHkpIHsKICAgIHRoaXMuc2F2ZUN1cnJlbnQoKTsKCiAgICBpZiAoaWQgJiYgcHJvcGVydHkpIHsKICAgICAgdmFyIGN1cnJlbnRTZXQgPSBzdGF0ZXMuY3VycmVudC5maW5kKGZ1bmN0aW9uIChvYmopIHsKICAgICAgICByZXR1cm4gb2JqLmlkID09IGlkOwogICAgICB9KTsKICAgICAgY3VycmVudFNldFtwcm9wZXJ0eV0gPSBkYXRhOwogICAgfSBlbHNlIHsKICAgICAgc3RhdGVzLmN1cnJlbnQgPSBkYXRhOwogICAgfQogIH0sCiAgbW9kaWZ5Q3VycmVudDogZnVuY3Rpb24gbW9kaWZ5Q3VycmVudChkYXRhLCBpZCwgcHJvcGVydHkpIHsKICAgIHZhciBjdXJyZW50U2V0ID0gc3RhdGVzLmN1cnJlbnQuZmluZChmdW5jdGlvbiAob2JqKSB7CiAgICAgIHJldHVybiBvYmouaWQgPT0gaWQ7CiAgICB9KTsKICAgIGN1cnJlbnRTZXRbcHJvcGVydHldID0gZGF0YTsKICB9LAogIHJlbW92ZUN1cnJlbnQ6IGZ1bmN0aW9uIHJlbW92ZUN1cnJlbnQoaWQpIHsKICAgIHRoaXMuc2F2ZUN1cnJlbnQoKTsKICAgIHZhciBzZXRJbmRleCA9IHN0YXRlcy5jdXJyZW50LmZpbmRJbmRleChmdW5jdGlvbiAob2JqKSB7CiAgICAgIHJldHVybiBvYmouaWQgPT0gaWQ7CiAgICB9KTsKICAgIHN0YXRlcy5jdXJyZW50LnNwbGljZShzZXRJbmRleCwgMSk7CiAgfSwKICB1cGRhdGVDYWNoZTogZnVuY3Rpb24gdXBkYXRlQ2FjaGUobmFtZSwgaWQsIHByb3AsIGRhdGEpIHsKICAgIHZhciBvYmogPSBjYWNoZVtuYW1lXS5maW5kKGZ1bmN0aW9uIChvKSB7CiAgICAgIHJldHVybiBvLmlkID09IGlkOwogICAgfSk7CiAgICBvYmpbcHJvcF0gPSBkYXRhOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlczogc3RhdGVzLAogIGNhY2hlOiBjYWNoZSwKICBtZXRob2RzOiBtZXRob2RzCn07"},{"version":3,"sources":["C:/Users/JThorneUMN/Documents/GitHub/dendro-plots/src/modules/store.js"],"names":["reactive","states","past","current","future","cache","raw","splines","index","modals","plots","value","name","loadSequence","colors","shapes","methods","loadData","data","colorIndex","shapeIndex","saveCurrent","set","length","existingSet","find","obj","n","filter","split","newState","Object","id","Math","floor","random","some","o","file","fileName","color","shape","applyColorToRaw","rawPointsActive","rawSplineFreq","rawPlotLocation","indexPointsFreq","indexSplineFreq","indexPlotLocation","push","newPoints","x","y","newModal","active","top","outOfBounds","addTo","property","undo","recentState","pop","redo","currentCopy","JSON","parse","stringify","newCurrent","currentSet","modifyCurrent","removeCurrent","setIndex","findIndex","splice","updateCache","prop"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,KAAzB;AAEA,IAAMC,MAAM,GAAGD,QAAQ,CAAC;AACtBE,EAAAA,IAAI,EAAE,EADgB;AAEtBC,EAAAA,OAAO,EAAE,EAFa;AAGtBC,EAAAA,MAAM,EAAE;AAHc,CAAD,CAAvB;AAOA,IAAMC,KAAK,GAAGL,QAAQ,CAAC;AACrBM,EAAAA,GAAG,EAAE,EADgB;AAErBC,EAAAA,OAAO,EAAE;AACGD,IAAAA,GAAG,EAAE,EADR;AAEGE,IAAAA,KAAK,EAAE;AAFV,GAFY;AAMrBA,EAAAA,KAAK,EAAE,EANc;AAOrBC,EAAAA,MAAM,EAAE,EAPa;AAQrBC,EAAAA,KAAK,EAAE,CAAC;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAAD,EACC;AAAED,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GADD,CARc;AAUrBC,EAAAA,YAAY,EAAE,EAVO;AAWrBC,EAAAA,MAAM,EAAE,CACE,SADF,EACc;AACZ,WAFF,EAEc;AACZ,WAHF,EAGc;AACZ,WAJF,EAIc;AACZ,WALF,EAKc;AACZ,WANF,EAMc;AACZ,WAPF,EAOc;AACZ,WARF,EAQc;AACZ,WATF,EASc;AACZ,WAVF,CAUc;AAVd,GAXa;AAuBrBC,EAAAA,MAAM,EAAE,CAAC;AAACJ,IAAAA,KAAK,EAAE,KAAR;AAAeC,IAAAA,IAAI,EAAE;AAArB,GAAD,EACC;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GADD,EAEC;AAAED,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,IAAI,EAAE;AAA9B,GAFD,EAGC;AAAED,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,IAAI,EAAE;AAAhC,GAHD,EAIC;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GAJD,EAKC;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,IAAI,EAAE;AAA1B,GALD,EAMC;AAAED,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,IAAI,EAAE;AAA9B,GAND,EAOC;AAAED,IAAAA,KAAK,EAAE,kBAAT;AAA6BC,IAAAA,IAAI,EAAE;AAAnC,GAPD,EAQC;AAAED,IAAAA,KAAK,EAAE,oBAAT;AAA+BC,IAAAA,IAAI,EAAE;AAArC,GARD,EASC;AAAED,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,IAAI,EAAE;AAA9B,GATD,EAUC;AAAED,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GAVD;AAvBa,CAAD,CAAtB;AAoCA,IAAMI,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAE,kBAASC,IAAT,EAAe;AACvB,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIC,UAAU,GAAG,CAAjB;AAEA,SAAKC,WAAL;;AAJuB,+CAMLH,IANK;AAAA;;AAAA;AAAA;AAAA,YAMZI,GANY;;AAOrB,YAAIH,UAAU,IAAId,KAAK,CAACS,MAAN,CAAaS,MAA/B,EAAuC;AACrCJ,UAAAA,UAAU,GAAG,CAAb;AACD;;AACD,YAAIC,UAAU,IAAIf,KAAK,CAACU,MAAN,CAAaQ,MAA/B,EAAuC;AACrCH,UAAAA,UAAU,GAAG,CAAb;AACD;;AAED,YAAII,WAAW,GAAGvB,MAAM,CAACE,OAAP,CAAesB,IAAf,CAAoB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACd,IAAJ,IAAYU,GAAG,CAACV,IAApB;AAAA,SAAvB,CAAlB;;AACA,YAAIY,WAAJ,EAAiB;AACf,cAAIG,CAAC,GAAG1B,MAAM,CAACE,OAAP,CAAeyB,MAAf,CAAsB,UAAAF,GAAG;AAAA,mBAAIA,GAAG,CAACd,IAAJ,CAASiB,KAAT,CAAe,IAAf,EAAqB,CAArB,KAA2BP,GAAG,CAACV,IAAnC;AAAA,WAAzB,EAAkEW,MAA1E;AACAD,UAAAA,GAAG,CAACV,IAAJ,GAAWU,GAAG,CAACV,IAAJ,GAAW,IAAX,GAAkBe,CAAlB,GAAsB,GAAjC;AACD;;AAED,YAAIG,QAAQ,GAAG,IAAIC,MAAJ,EAAf,CApBqB,CAqBrB;;AACA,YAAIC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,QAAQ,KAAR,GAAgB,CAAjC,CAAX,IAAkD,KAA3D;;AACA,eAAOlC,MAAM,CAACE,OAAP,CAAeiC,IAAf,CAAoB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACL,EAAF,IAAQA,EAAZ;AAAA,SAArB,CAAP,EAA6C;AAC3CA,UAAAA,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,QAAQ,KAAR,GAAgB,CAAjC,CAAX,IAAkD,KAAvD;AACD,SAzBoB,CA2BrB;;;AACAL,QAAAA,QAAQ,CAACE,EAAT,GAAcA,EAAd;AACAF,QAAAA,QAAQ,CAAClB,IAAT,GAAgBU,GAAG,CAACV,IAApB;AACAkB,QAAAA,QAAQ,CAACQ,IAAT,GAAgBhB,GAAG,CAACiB,QAApB;AACAT,QAAAA,QAAQ,CAACU,KAAT,GAAiBnC,KAAK,CAACS,MAAN,CAAaK,UAAb,CAAjB;AACAA,QAAAA,UAAU;AACVW,QAAAA,QAAQ,CAACW,KAAT,GAAiBpC,KAAK,CAACU,MAAN,CAAaK,UAAb,EAAyBT,KAA1C;AACAS,QAAAA,UAAU;AACVU,QAAAA,QAAQ,CAACY,eAAT,GAA2B,IAA3B;AAEAZ,QAAAA,QAAQ,CAACa,eAAT,GAA2B,KAA3B;AACAb,QAAAA,QAAQ,CAACc,aAAT,GAAyB,KAAzB;AACAd,QAAAA,QAAQ,CAACe,eAAT,GAA2B,CAA3B;AAEAf,QAAAA,QAAQ,CAACgB,eAAT,GAA2B,KAA3B;AACAhB,QAAAA,QAAQ,CAACiB,eAAT,GAA2B,KAA3B;AACAjB,QAAAA,QAAQ,CAACkB,iBAAT,GAA6B,CAA7B;AAEA/C,QAAAA,MAAM,CAACE,OAAP,CAAe8C,IAAf,CAAoBnB,QAApB,EA7CqB,CA+CrB;;AACA,YAAIoB,SAAS,GAAG,IAAInB,MAAJ,EAAhB;AACAmB,QAAAA,SAAS,CAAClB,EAAV,GAAeA,EAAf;AACAkB,QAAAA,SAAS,CAACC,CAAV,GAAc7B,GAAG,CAAC6B,CAAlB;AACAD,QAAAA,SAAS,CAACE,CAAV,GAAc9B,GAAG,CAAC8B,CAAlB;AACA/C,QAAAA,KAAK,CAACC,GAAN,CAAU2C,IAAV,CAAeC,SAAf,EApDqB,CAsDrB;;AACA,YAAIG,QAAQ,GAAG,IAAItB,MAAJ,EAAf;AACAsB,QAAAA,QAAQ,CAACrB,EAAT,GAAcA,EAAd;AACAqB,QAAAA,QAAQ,CAACC,MAAT,GAAkB,KAAlB;AACAD,QAAAA,QAAQ,CAACE,GAAT,GAAe,CAAf;AACAF,QAAAA,QAAQ,CAACG,WAAT,GAAuB,KAAvB;AACAnD,QAAAA,KAAK,CAACI,MAAN,CAAawC,IAAb,CAAkBI,QAAlB,EA5DqB,CA8DrB;;AACAhD,QAAAA,KAAK,CAACQ,YAAN,CAAmBoC,IAAnB,CAAwBnB,QAAQ,CAACE,EAAjC;AA/DqB;;AAMvB,0DAAwB;AAAA;AA0DvB;AAhEsB;AAAA;AAAA;AAAA;AAAA;AAiExB,GAlEa;AAmEdyB,EAAAA,KAAK,EAAE,eAASvC,IAAT,EAAewC,QAAf,EAAyB;AAC9BzD,IAAAA,MAAM,CAACyD,QAAD,CAAN,CAAiBT,IAAjB,CAAsB/B,IAAtB;AACD,GArEa;AAsEdyC,EAAAA,IAAI,EAAE,gBAAW;AACf,QAAIC,WAAW,GAAG3D,MAAM,CAACC,IAAP,CAAYD,MAAM,CAACC,IAAP,CAAYqB,MAAZ,GAAqB,CAAjC,CAAlB;AACAtB,IAAAA,MAAM,CAACC,IAAP,CAAY2D,GAAZ;AACA,SAAKJ,KAAL,CAAWxD,MAAM,CAACE,OAAlB,EAA2B,QAA3B;AACAF,IAAAA,MAAM,CAACE,OAAP,GAAiByD,WAAjB;AACD,GA3Ea;AA4EdE,EAAAA,IAAI,EAAE,gBAAW;AACf,QAAIF,WAAW,GAAG3D,MAAM,CAACG,MAAP,CAAcH,MAAM,CAACG,MAAP,CAAcmB,MAAd,GAAuB,CAArC,CAAlB;AACAtB,IAAAA,MAAM,CAACG,MAAP,CAAcyD,GAAd;AACA,SAAKJ,KAAL,CAAWxD,MAAM,CAACE,OAAlB,EAA2B,MAA3B;AACAF,IAAAA,MAAM,CAACE,OAAP,GAAiByD,WAAjB;AACD,GAjFa;AAkFdvC,EAAAA,WAAW,EAAE,uBAAW;AACtBpB,IAAAA,MAAM,CAACG,MAAP,GAAgB,EAAhB;AACA,QAAI2D,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAejE,MAAM,CAACE,OAAtB,CAAX,CAAlB;AACAF,IAAAA,MAAM,CAACC,IAAP,CAAY+C,IAAZ,CAAiBc,WAAjB;AACD,GAtFa;AAuFdI,EAAAA,UAAU,EAAE,oBAASjD,IAAT,EAAec,EAAf,EAAmB0B,QAAnB,EAA6B;AACvC,SAAKrC,WAAL;;AACA,QAAIW,EAAE,IAAI0B,QAAV,EAAoB;AAClB,UAAIU,UAAU,GAAGnE,MAAM,CAACE,OAAP,CAAesB,IAAf,CAAoB,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACM,EAAJ,IAAUA,EAAd;AAAA,OAAvB,CAAjB;AACAoC,MAAAA,UAAU,CAACV,QAAD,CAAV,GAAuBxC,IAAvB;AACD,KAHD,MAGO;AACLjB,MAAAA,MAAM,CAACE,OAAP,GAAiBe,IAAjB;AACD;AACF,GA/Fa;AAgGdmD,EAAAA,aAAa,EAAE,uBAASnD,IAAT,EAAec,EAAf,EAAmB0B,QAAnB,EAA6B;AAC1C,QAAIU,UAAU,GAAGnE,MAAM,CAACE,OAAP,CAAesB,IAAf,CAAoB,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACM,EAAJ,IAAUA,EAAd;AAAA,KAAvB,CAAjB;AACAoC,IAAAA,UAAU,CAACV,QAAD,CAAV,GAAuBxC,IAAvB;AACD,GAnGa;AAoGdoD,EAAAA,aAAa,EAAE,uBAAStC,EAAT,EAAa;AAC1B,SAAKX,WAAL;AACA,QAAIkD,QAAQ,GAAGtE,MAAM,CAACE,OAAP,CAAeqE,SAAf,CAAyB,UAAA9C,GAAG;AAAA,aAAIA,GAAG,CAACM,EAAJ,IAAUA,EAAd;AAAA,KAA5B,CAAf;AACA/B,IAAAA,MAAM,CAACE,OAAP,CAAesE,MAAf,CAAsBF,QAAtB,EAAgC,CAAhC;AACD,GAxGa;AAyGdG,EAAAA,WAAW,EAAE,qBAAS9D,IAAT,EAAeoB,EAAf,EAAmB2C,IAAnB,EAAyBzD,IAAzB,EAA+B;AAC1C,QAAIQ,GAAG,GAAGrB,KAAK,CAACO,IAAD,CAAL,CAAYa,IAAZ,CAAiB,UAAAY,CAAC;AAAA,aAAIA,CAAC,CAACL,EAAF,IAAQA,EAAZ;AAAA,KAAlB,CAAV;AACAN,IAAAA,GAAG,CAACiD,IAAD,CAAH,GAAYzD,IAAZ;AACD;AA5Ga,CAAhB;AA+GA,eAAe;AACbjB,EAAAA,MAAM,EAANA,MADa;AAEbI,EAAAA,KAAK,EAALA,KAFa;AAGbW,EAAAA,OAAO,EAAPA;AAHa,CAAf","sourcesContent":["import { reactive } from 'vue'\r\n\r\nconst states = reactive({\r\n  past: [],\r\n  current: [],\r\n  future: [],\r\n})\r\n\r\n\r\nconst cache = reactive({\r\n  raw: [],\r\n  splines: {\r\n              raw: [],\r\n              index: [],\r\n           },\r\n  index: [],\r\n  modals: [],\r\n  plots: [{ value: 1, name: 'Plot 1' },\r\n          { value: 2, name: 'Plot 2' }],\r\n  loadSequence: [],\r\n  colors: [\r\n            '#1f77b4',  // muted blue\r\n            '#ff7f0e',  // safety orange\r\n            '#2ca02c',  // cooked asparagus green\r\n            '#d62728',  // brick red\r\n            '#9467bd',  // muted purple\r\n            '#8c564b',  // chestnut brown\r\n            '#e377c2',  // raspberry yogurt pink\r\n            '#7f7f7f',  // middle gray\r\n            '#bcbd22',  // curry yellow-green\r\n            '#17becf'   // blue-teal\r\n          ],\r\n  shapes: [{value: false, name: 'None'},\r\n           { value: 'circle', name: 'Circle' },\r\n           { value: 'triangle-up', name: 'Triangle' },\r\n           { value: 'triangle-down', name: 'Inverse Triangle' },\r\n           { value: 'square', name: 'Square' },\r\n           { value: 'diamond', name: 'Diamond' },\r\n           { value: 'circle-open', name: 'Open Circle' },\r\n           { value: 'triangle-up-open', name: 'Open Triangle' },\r\n           { value: 'triangle-down-open', name: 'Open Inverse Triangle' },\r\n           { value: 'square-open', name: 'Open Square' },\r\n           { value: 'diamond-open', name: 'Open Diamond' }]\r\n})\r\n\r\nconst methods = {\r\n  loadData: function(data) {\r\n    let colorIndex = 0\r\n    let shapeIndex = 0\r\n\r\n    this.saveCurrent()\r\n\r\n    for (const set of data) {\r\n      if (colorIndex == cache.colors.length) {\r\n        colorIndex = 0\r\n      }\r\n      if (shapeIndex == cache.shapes.length) {\r\n        shapeIndex = 0\r\n      }\r\n\r\n      let existingSet = states.current.find(obj => obj.name == set.name)\r\n      if (existingSet) {\r\n        let n = states.current.filter(obj => obj.name.split(' (')[0] == set.name).length\r\n        set.name = set.name + ' (' + n + ')'\r\n      }\r\n\r\n      let newState = new Object()\r\n      // set IDs are random 5 digit numbers\r\n      let id = Math.floor(Math.random() * (99999 - 10000 + 1)) + 10000\r\n      while (states.current.some(o => o.id == id)) {\r\n        id = Math.floor(Math.random() * (99999 - 10000 + 1)) + 10000\r\n      }\r\n\r\n      // default state values\r\n      newState.id = id\r\n      newState.name = set.name\r\n      newState.file = set.fileName\r\n      newState.color = cache.colors[colorIndex]\r\n      colorIndex++\r\n      newState.shape = cache.shapes[shapeIndex].value\r\n      shapeIndex++\r\n      newState.applyColorToRaw = true\r\n\r\n      newState.rawPointsActive = false\r\n      newState.rawSplineFreq = false\r\n      newState.rawPlotLocation = 1\r\n\r\n      newState.indexPointsFreq = false\r\n      newState.indexSplineFreq = false\r\n      newState.indexPlotLocation = 1\r\n\r\n      states.current.push(newState)\r\n\r\n      // cache data\r\n      let newPoints = new Object()\r\n      newPoints.id = id\r\n      newPoints.x = set.x\r\n      newPoints.y = set.y\r\n      cache.raw.push(newPoints)\r\n\r\n      // default active cache values\r\n      let newModal = new Object()\r\n      newModal.id = id\r\n      newModal.active = false\r\n      newModal.top = 0\r\n      newModal.outOfBounds = false\r\n      cache.modals.push(newModal)\r\n\r\n      // establish default load sequence\r\n      cache.loadSequence.push(newState.id)\r\n    }\r\n  },\r\n  addTo: function(data, property) {\r\n    states[property].push(data)\r\n  },\r\n  undo: function() {\r\n    let recentState = states.past[states.past.length - 1]\r\n    states.past.pop()\r\n    this.addTo(states.current, 'future')\r\n    states.current = recentState\r\n  },\r\n  redo: function() {\r\n    let recentState = states.future[states.future.length - 1]\r\n    states.future.pop()\r\n    this.addTo(states.current, 'past')\r\n    states.current = recentState\r\n  },\r\n  saveCurrent: function() {\r\n    states.future = []\r\n    let currentCopy = JSON.parse(JSON.stringify(states.current))\r\n    states.past.push(currentCopy)\r\n  },\r\n  newCurrent: function(data, id, property) {\r\n    this.saveCurrent()\r\n    if (id && property) {\r\n      let currentSet = states.current.find(obj => obj.id == id)\r\n      currentSet[property] = data\r\n    } else {\r\n      states.current = data\r\n    }\r\n  },\r\n  modifyCurrent: function(data, id, property) {\r\n    let currentSet = states.current.find(obj => obj.id == id)\r\n    currentSet[property] = data\r\n  },\r\n  removeCurrent: function(id) {\r\n    this.saveCurrent()\r\n    let setIndex = states.current.findIndex(obj => obj.id == id)\r\n    states.current.splice(setIndex, 1)\r\n  },\r\n  updateCache: function(name, id, prop, data) {\r\n    let obj = cache[name].find(o => o.id == id)\r\n    obj[prop] = data\r\n  }\r\n}\r\n\r\nexport default {\r\n  states,\r\n  cache,\r\n  methods\r\n}\r\n"]}]}