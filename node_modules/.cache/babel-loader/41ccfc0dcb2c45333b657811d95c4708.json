{"remainingRequest":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\modules\\store.js","dependencies":[{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\modules\\store.js","mtime":1631030153955},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/JThorneUMN/Documents/GitHub/dendro-plots/src/modules/store.js"],"names":["reactive","states","past","current","future","cache","raw","splines","index","plots","value","name","loadSequence","colors","colorIndex","shapes","modals","methods","initializeData","data","statesDEFAULT","shape","applyColorToRaw","rawPointsActive","rawSplineFreq","rawPlotLocation","indexPointsFreq","indexSplineFreq","indexPlotLocation","modalDEFAULT","active","top","outOfBounds","statesARR","id","color","modalARR","obj","Object","assign","push","set","newState","rawPointsBOOL","rawSplineNUM","indexPointsNUM","indexSplineNUM","file","newPoints","x","y","newModal","loadData","saveCurrent","length","existingSet","find","n","filter","split","Math","floor","random","some","o","fileName","addTo","property","undo","recentState","pop","redo","currentCopy","JSON","parse","stringify","newCurrent","currentSet","modifyCurrent","removeCurrent","setIndex","findIndex","splice","updateCache","prop"],"mappings":"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","sourcesContent":["import { reactive } from 'vue'\r\n\r\nconst states = reactive({\r\n  past: [],\r\n  current: [],\r\n  future: [],\r\n})\r\n\r\n\r\nconst cache = reactive({\r\n  raw: [],\r\n  splines: {\r\n              raw: [],\r\n              index: [],\r\n           },\r\n  index: [],\r\n  plots: [{ value: 1, name: 'Plot 1' },\r\n          { value: 2, name: 'Plot 2' }],\r\n  loadSequence: [],\r\n  colors: [\r\n            '#1f77b4',  // muted blue\r\n            '#ff7f0e',  // safety orange\r\n            '#2ca02c',  // cooked asparagus green\r\n            '#d62728',  // brick red\r\n            '#9467bd',  // muted purple\r\n            '#8c564b',  // chestnut brown\r\n            '#e377c2',  // raspberry yogurt pink\r\n            '#7f7f7f',  // middle gray\r\n            '#bcbd22',  // curry yellow-green\r\n            '#17becf'   // blue-teal\r\n          ],\r\n  colorIndex: 0,\r\n  shapes: [{value: false, name: 'None'},\r\n           { value: 'circle', name: 'Circle' },\r\n           { value: 'triangle-up', name: 'Triangle' },\r\n           { value: 'triangle-down', name: 'Inverse Triangle' },\r\n           { value: 'square', name: 'Square' },\r\n           { value: 'diamond', name: 'Diamond' },\r\n           { value: 'circle-open', name: 'Open Circle' },\r\n           { value: 'triangle-up-open', name: 'Open Triangle' },\r\n           { value: 'triangle-down-open', name: 'Open Inverse Triangle' },\r\n           { value: 'square-open', name: 'Open Square' },\r\n           { value: 'diamond-open', name: 'Open Diamond' }],\r\n  states: [],\r\n  modals: [],\r\n})\r\n\r\nconst methods = {\r\n  initializeData: function(data) {\r\n    // create all & median states\r\n    let statesDEFAULT = {\r\n      shape: false,\r\n      applyColorToRaw: true,\r\n      rawPointsActive: false,\r\n      rawSplineFreq: false,\r\n      rawPlotLocation: 1,\r\n      indexPointsFreq: false,\r\n      indexSplineFreq: false,\r\n      indexPlotLocation: 2,\r\n    }\r\n\r\n    let modalDEFAULT = {\r\n      active: false,\r\n      top: 0,\r\n      outOfBounds: false,\r\n    }\r\n\r\n    let statesARR = [{\r\n      id: 111,\r\n      name: 'All',\r\n      color: '#ff0000'\r\n    },\r\n    {\r\n      id: 222,\r\n      name: 'Median',\r\n      color: '#1e00ff'\r\n    }]\r\n\r\n    let modalARR = [{\r\n      id: 111,\r\n    },\r\n    {\r\n      id: 222,\r\n    }]\r\n\r\n    for (const obj of statesARR) {\r\n      Object.assign(obj, statesDEFAULT)\r\n      cache.states.push(obj)\r\n    }\r\n\r\n    for (const obj of modalARR) {\r\n      Object.assign(obj, modalDEFAULT)\r\n      cache.modals.push(obj)\r\n    }\r\n\r\n    // base core sets given specifc IDs\r\n    let id = 1\r\n\r\n    for (const set of data) {\r\n      let newState = new Object()\r\n\r\n      let rawPointsBOOL = (id === 1) ? true : false\r\n      let rawSplineNUM = (id === 1) ? 20 : false\r\n      let indexPointsNUM = (id === 1) ? 20 : false\r\n      let indexSplineNUM = (id === 1) ? 20 : false\r\n\r\n      // default state values\r\n      newState.id = id\r\n      newState.name = set.name\r\n      newState.file = 'DendroElevator'\r\n      newState.color = cache.colors[cache.colorIndex]\r\n      cache.colorIndex++\r\n      newState.shape = false\r\n      newState.applyColorToRaw = true\r\n\r\n      newState.rawPointsActive = rawPointsBOOL\r\n      newState.rawSplineFreq = rawSplineNUM\r\n      newState.rawPlotLocation = 1\r\n\r\n      newState.indexPointsFreq = indexPointsNUM\r\n      newState.indexSplineFreq = indexSplineNUM\r\n      newState.indexPlotLocation = 2\r\n\r\n      states.current.push(newState)\r\n\r\n      // cache data\r\n      let newPoints = new Object()\r\n      newPoints.id = id\r\n      newPoints.x = set.x\r\n      newPoints.y = set.y\r\n      cache.raw.push(newPoints)\r\n\r\n      // default active cache values\r\n      let newModal = new Object()\r\n      newModal.id = id\r\n      newModal.active = false\r\n      newModal.top = 0\r\n      newModal.outOfBounds = false\r\n      cache.modals.push(newModal)\r\n\r\n      // establish default load sequence\r\n      cache.loadSequence.push(id)\r\n\r\n      id++\r\n    }\r\n  },\r\n  loadData: function(data) {\r\n    this.saveCurrent()\r\n\r\n    for (const set of data) {\r\n      if (cache.colorIndex == cache.colors.length) {\r\n        cache.colorIndex = 0\r\n      }\r\n\r\n      let existingSet = states.current.find(obj => obj.name == set.name)\r\n      if (existingSet) {\r\n        let n = states.current.filter(obj => obj.name.split(' (')[0] == set.name).length\r\n        set.name = set.name + ' (' + n + ')'\r\n      }\r\n\r\n      let newState = new Object()\r\n\r\n      // set IDs are random 5 digit numbers\r\n      let id = Math.floor(Math.random() * (99999 - 10000 + 1)) + 10000\r\n      while (states.current.some(o => o.id == id)) {\r\n        id = Math.floor(Math.random() * (99999 - 10000 + 1)) + 10000\r\n      }\r\n\r\n      // default state values\r\n      newState.id = id\r\n      newState.name = set.name\r\n      newState.file = set.fileName\r\n      newState.color = cache.colors[cache.colorIndex]\r\n      cache.colorIndex++\r\n      newState.shape = cache.shapes[0].value\r\n      newState.applyColorToRaw = true\r\n\r\n      newState.rawPointsActive = false\r\n      newState.rawSplineFreq = false\r\n      newState.rawPlotLocation = 1\r\n\r\n      newState.indexPointsFreq = false\r\n      newState.indexSplineFreq = false\r\n      newState.indexPlotLocation = 2\r\n\r\n      states.current.push(newState)\r\n\r\n      // cache data\r\n      let newPoints = new Object()\r\n      newPoints.id = id\r\n      newPoints.x = set.x\r\n      newPoints.y = set.y\r\n      cache.raw.push(newPoints)\r\n\r\n      // default active cache values\r\n      let newModal = new Object()\r\n      newModal.id = id\r\n      newModal.active = false\r\n      newModal.top = 0\r\n      newModal.outOfBounds = false\r\n      cache.modals.push(newModal)\r\n\r\n      // establish default load sequence\r\n      cache.loadSequence.push(id)\r\n    }\r\n  },\r\n  addTo: function(data, property) {\r\n    states[property].push(data)\r\n  },\r\n  undo: function() {\r\n    let recentState = states.past[states.past.length - 1]\r\n    states.past.pop()\r\n    this.addTo(states.current, 'future')\r\n    states.current = recentState\r\n  },\r\n  redo: function() {\r\n    let recentState = states.future[states.future.length - 1]\r\n    states.future.pop()\r\n    this.addTo(states.current, 'past')\r\n    states.current = recentState\r\n  },\r\n  saveCurrent: function() {\r\n    states.future = []\r\n    let currentCopy = JSON.parse(JSON.stringify(states.current))\r\n    states.past.push(currentCopy)\r\n  },\r\n  newCurrent: function(data, id, property) {\r\n    this.saveCurrent()\r\n    if (id && property) {\r\n      let currentSet = states.current.find(obj => obj.id == id)\r\n      currentSet[property] = data\r\n    } else {\r\n      states.current = data\r\n    }\r\n  },\r\n  modifyCurrent: function(data, id, property) {\r\n    let currentSet = states.current.find(obj => obj.id == id)\r\n    currentSet[property] = data\r\n  },\r\n  removeCurrent: function(id) {\r\n    this.saveCurrent()\r\n    let setIndex = states.current.findIndex(obj => obj.id == id)\r\n    states.current.splice(setIndex, 1)\r\n  },\r\n  updateCache: function(name, id, prop, data) {\r\n    let obj = cache[name].find(o => o.id == id)\r\n    obj[prop] = data\r\n  }\r\n}\r\n\r\nexport default {\r\n  states,\r\n  cache,\r\n  methods\r\n}\r\n"]}]}