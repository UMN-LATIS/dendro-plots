{"remainingRequest":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\modules\\traces.js","dependencies":[{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\modules\\traces.js","mtime":1631127114497},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/JThorneUMN/Documents/GitHub/dendro-plots/src/modules/traces.js"],"names":["store","createSpline","createIndex","createMedian","simpleTrace","obj","colorBool","propA","propB","x","y","color","width","shape","mode","trace","Object","name","line","marker","symbol","size","type","splineTrace","prop","freq","splineFORindex","freqName","yearSpan","Math","abs","raw","length","indexObj","cache","index","find","o","id","splineObj","splines","spline","JSON","parse","stringify","applyColorToRaw","indexTrace","formatTraces","locVal","arr","Array","storeCopy","states","current","median","medianID","push","activeStates","filter","rawPointsActive","rawSplineFreq","indexPointsFreq","indexSplineFreq","activePlots","map","rawPlotLocation","indexPlotLocation","activeData","activeDataIDs","medianRaw","dataIDsForMedian","sort","data","methods","dataForMedian","rawSpline","indexSpline","forEach"],"mappings":"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","sourcesContent":["import store from './store.js'\r\nimport createSpline from './spline.js'\r\nimport createIndex from './index.js'\r\nimport createMedian from './median.js'\r\n\r\nfunction simpleTrace(obj, colorBool, propA, propB) {\r\n  let x = (propB) ? obj[propA][propB].x : obj[propA].x\r\n  let y = (propB) ? obj[propA][propB].y : obj[propA].y\r\n  let color = (colorBool) ? obj.color : '#797979'\r\n  let width = (obj.shape) ? 2 : 3\r\n  let mode = (obj.shape) ? 'lines+markers' : 'lines'\r\n\r\n  let trace = new Object()\r\n  trace.name = obj.name\r\n  trace.x = x\r\n  trace.y = y\r\n  trace.line = { color: color, width: width }\r\n  trace.mode = mode\r\n  if (obj.shape) {\r\n    trace.marker = { symbol: obj.shape, size: 8 }\r\n  }\r\n  trace.type = 'scatter' // need scatter gl\r\n\r\n  return trace\r\n}\r\n\r\nfunction splineTrace(obj, prop, freq, splineFORindex) {\r\n  let freqName = freq + 'yr'\r\n  if (freq < 1) {\r\n    let yearSpan = Math.abs(obj.raw.x[obj.raw.x.length - 1] - obj.raw.x[0]) + 1\r\n    freqName = (100 * freq) + '%'\r\n    freq = freq * yearSpan\r\n  }\r\n\r\n  let x, y\r\n  if (splineFORindex) {\r\n    let indexObj = store.cache.index.find(o => o.id == obj.id)\r\n    let index = (indexObj) ? indexObj[freq] : null\r\n    if (!index) {\r\n      let splineObj = store.cache.splines.raw.find(o => o.id == obj.id)\r\n      let spline = (splineObj && splineObj[freq]) ? splineObj[freq] : createSpline(obj.raw.x, obj.raw.y, freq, obj.id, prop, 'raw')\r\n      index = createIndex(obj.raw.x, obj.raw.y, spline, freq, obj.id)\r\n    }\r\n    x = index.x\r\n    y = index.y\r\n  } else {\r\n    x = obj.raw.x\r\n    y = obj.raw.y\r\n  }\r\n\r\n  // spline data previously saved\r\n  if (!obj.spline[prop]) {\r\n    let spline = createSpline(x, y, freq, obj.id, prop)\r\n\r\n    // add spline to obj\r\n    obj.spline[prop] = {\r\n      x: spline.x,\r\n      y: spline.y,\r\n    }\r\n  }\r\n\r\n  obj = JSON.parse(JSON.stringify(obj))\r\n  obj.name = obj.name + '_' + freqName +'_spline'\r\n  obj.shape = false\r\n\r\n  let trace = simpleTrace(obj, !obj.applyColorToRaw, 'spline', prop)\r\n\r\n  return trace\r\n}\r\n\r\nfunction indexTrace(obj, prop, freq) {\r\n  let freqName = freq + 'yr'\r\n  if (freq < 1) {\r\n    let yearSpan = Math.abs(obj.raw.x[obj.raw.x.length - 1] - obj.raw.x[0]) + 1\r\n    freqName = (100 * freq) + '%'\r\n    freq = freq * yearSpan\r\n  }\r\n\r\n  if (!obj.index) {\r\n    // check if spline exists in order to compute index\r\n    let splineObj = store.cache.splines.raw.find(o => o.id == obj.id)\r\n    let spline = (splineObj && splineObj[freq]) ? splineObj[freq] : createSpline(obj.raw.x, obj.raw.y, freq, obj.id, prop, 'raw')\r\n    let index = createIndex(obj.raw.x, obj.raw.y, spline, freq, obj.id)\r\n\r\n    // add index to obj\r\n    obj.index = {\r\n      x: index.x,\r\n      y: index.y\r\n    }\r\n  }\r\n\r\n  obj = JSON.parse(JSON.stringify(obj))\r\n  obj.name = obj.name + '_' + freqName +'_index'\r\n\r\n  let trace = simpleTrace(obj, obj.applyColorToRaw, prop)\r\n\r\n  return trace\r\n}\r\n\r\n// param (locVal): plot location value\r\nconst formatTraces = function(locVal) {\r\n  let arr = new Array()\r\n\r\n  // create array with data only intended for specified plot\r\n  let storeCopy = JSON.parse(JSON.stringify(store.states.current))\r\n  // add median to copy\r\n  let median = store.cache.states.find(o => o.id === store.cache.medianID)\r\n  storeCopy.push(median)\r\n\r\n  // filter out inactive data sets\r\n  let activeStates = storeCopy.filter(o => (o.rawPointsActive || o.rawSplineFreq || o.indexPointsFreq || o.indexSplineFreq))\r\n\r\n  let activePlots = activeStates.map(o => {\r\n    if (o.rawPlotLocation != locVal) {\r\n      delete o.rawPointsActive\r\n      delete o.rawSplineFreq\r\n    }\r\n    if (o.indexPlotLocation != locVal) {\r\n      delete o.indexPointsFreq\r\n      delete o.indexSplineFreq\r\n    }\r\n\r\n    return o\r\n  })\r\n\r\n  // add required raw data, splines, & index to states\r\n  let activeData = activePlots.map(obj => {\r\n    // median\r\n    // find if median not current\r\n    let activeDataIDs = store.states.current.map(o => {\r\n        if (o.rawPointsActive || o.rawSplineFreq || o.indexPointsFreq || o.indexSplineFreq) {\r\n          return o.id\r\n        }\r\n    })\r\n    let medianRaw = store.cache.raw.find(o => o.id === cache.medianID)\r\n    if (JSON.stringify(store.cache.dataIDsForMedian.sort()) != JSON.stringify(activeDataIDs.sort())) {\r\n      store.cache.dataIDsForMedian = activeDataIDs\r\n      let data = store.methods.dataForMedian()\r\n      let median = createMedian(data)\r\n      medianRaw.x = median.x\r\n      medianRaw.y = median.y\r\n    }\r\n\r\n    // add raw data to all in-case spline or index requires computation\r\n    let raw = store.cache.raw.find(o => o.id == obj.id)\r\n    obj.raw = {\r\n      x: raw.x,\r\n      y: raw.y\r\n    }\r\n    if (obj.rawSplineFreq) {\r\n      let rawSpline = store.cache.splines.raw.find(o => o.id == obj.id)\r\n      obj.spline = {\r\n        raw: (rawSpline) ? rawSpline[obj.rawSplineFreq] : null\r\n      }\r\n    }\r\n    if (obj.indexPointsFreq) {\r\n      let index = store.cache.index.find(o => o.id == obj.id)\r\n      obj.index = (index) ? index[obj.indexPointsFreq] : null\r\n    }\r\n    if (obj.indexSplineFreq) {\r\n      let indexSpline = store.cache.splines.index.find(o => o.id == obj.id)\r\n      obj.spline = {\r\n        index: (indexSpline) ? indexSpline[obj.indexSplineFreq] : null\r\n      }\r\n    }\r\n\r\n    return obj\r\n  })\r\n\r\n  // create traces based on needed format\r\n  // order of creation important\r\n  // most recent trace rendered on top of earlier traces\r\n  activeData.forEach(obj => {\r\n    if (obj.rawSplineFreq) {\r\n      arr.push(splineTrace(obj, 'raw', obj.rawSplineFreq))\r\n    }\r\n    if (obj.rawPointsActive) {\r\n      arr.push(simpleTrace(obj, obj.applyColorToRaw, 'raw'))\r\n    }\r\n    if (obj.indexSplineFreq) {\r\n      arr.push(splineTrace(obj, 'index', obj.indexSplineFreq, true))\r\n    }\r\n    if (obj.indexPointsFreq) {\r\n      arr.push(indexTrace(obj, 'index', obj.indexPointsFreq))\r\n    }\r\n  })\r\n\r\n  return arr\r\n}\r\n\r\nexport default formatTraces\r\n"]}]}