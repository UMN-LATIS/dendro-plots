{"remainingRequest":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\components\\SubComponents\\Plot.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\components\\SubComponents\\Plot.vue","mtime":1631194090888},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgUGxvdGx5IGZyb20gJ3Bsb3RseS5qcyc7CmltcG9ydCBmb3JtYXRUcmFjZXMgZnJvbSAnLi4vLi4vbW9kdWxlcy90cmFjZXMuanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgaW5qZWN0OiBbJ3N0b3JlJ10sCiAgcHJvcHM6IFsndmFsdWUnLCAnbmFtZScsICdjb3VudCddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiB7CiAgICAgIG1lZGlhbjogdGhpcy5zdG9yZS5jYWNoZS5zdGF0ZXMuZmluZChmdW5jdGlvbiAobykgewogICAgICAgIHJldHVybiBvLmlkID09PSBfdGhpcy5zdG9yZS5jYWNoZS5tZWRpYW5JRDsKICAgICAgfSksCiAgICAgIGxvYWRpbmc6IHsKICAgICAgICBsYXlvdXQ6IHsKICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgIHRleHQ6ICdMb2FkaW5nLi4uJwogICAgICAgICAgfSwKICAgICAgICAgIHNob3dsZWdlbmQ6IGZhbHNlLAogICAgICAgICAgd2lkdGg6IDAsCiAgICAgICAgICBoZWlnaHQ6IDAKICAgICAgICB9LAogICAgICAgIGNvbmZpZzogewogICAgICAgICAgZGlzcGxheU1vZGVCYXI6IGZhbHNlLAogICAgICAgICAgZGlzcGxheWxvZ286IGZhbHNlCiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGRpdklEOiBmdW5jdGlvbiBkaXZJRCgpIHsKICAgICAgcmV0dXJuIFN0cmluZyhNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoOTk5OTkgLSAxMDAwMCArIDEpKSArIDEwMDAwKTsKICAgIH0sCiAgICBsYXlvdXQ6IGZ1bmN0aW9uIGxheW91dCgpIHsKICAgICAgdmFyIG9iaiA9IG5ldyBPYmplY3QoKTsKICAgICAgb2JqLnRpdGxlID0gewogICAgICAgIHRleHQ6IHRoaXMubmFtZSwKICAgICAgICB4OiAwLAogICAgICAgIHBhZDogewogICAgICAgICAgbDogMjAKICAgICAgICB9CiAgICAgIH07CiAgICAgIG9iai5zaG93bGVnZW5kID0gZmFsc2U7CiAgICAgIG9iai5sZWdlbmQgPSB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICdMZWdlbmQnCiAgICAgICAgfSwKICAgICAgICBvcmllbnRhdGlvbjogJ2gnCiAgICAgIH07CiAgICAgIG9iai54YXhpcyA9IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogJycsCiAgICAgICAgICBmb250OiB7CiAgICAgICAgICAgIHNpemU6IDEyCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9OwogICAgICBvYmoueWF4aXMgPSB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIGZvbnQ6IHsKICAgICAgICAgICAgc2l6ZTogMTIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH07CiAgICAgIG9iai5tYXJnaW4gPSB7CiAgICAgICAgdDogNjAsCiAgICAgICAgYjogNjAsCiAgICAgICAgbDogNjAsCiAgICAgICAgcjogNjAKICAgICAgfTsKICAgICAgcmV0dXJuIG9iajsKICAgIH0sCiAgICBjb25maWc6IGZ1bmN0aW9uIGNvbmZpZygpIHsKICAgICAgdmFyIG9iaiA9IG5ldyBPYmplY3QoKTsKICAgICAgb2JqLnJlc3BvbnNpdmUgPSBmYWxzZTsgLy8gY2F1c2VzIG1vZGUgYmFyIGlzc3VlIHdoZW4gdHJ1ZQoKICAgICAgb2JqLnNjcm9sbFpvb20gPSB0cnVlOwogICAgICBvYmouZGlzcGxheU1vZGVCYXIgPSB0cnVlOwogICAgICBvYmoubW9kZUJhckJ1dHRvbnNUb1JlbW92ZSA9IFsnc2VsZWN0MmQnLCAnbGFzc28yZCcsICd6b29tSW4yZCcsICd6b29tT3V0MmQnLCAnYXV0b1NjYWxlMmQnXTsKICAgICAgb2JqLmVkaXRhYmxlID0gdHJ1ZTsKICAgICAgb2JqLmRpc3BsYXlsb2dvID0gZmFsc2U7CiAgICAgIHJldHVybiBvYmo7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICByZXNpemVQbG90OiBmdW5jdGlvbiByZXNpemVQbG90KCkgewogICAgICBpZiAoIXRoaXMuJHJlZnNbdGhpcy5kaXZJRF0pIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHZhciB3ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Bsb3QtbWFuYWdlbWVudCcpLm9mZnNldFdpZHRoOwogICAgICB2YXIgaCA9IHdpbmRvdy5pbm5lckhlaWdodCAvIHRoaXMuY291bnQ7CiAgICAgIFBsb3RseS5yZWxheW91dCh0aGlzLiRyZWZzW3RoaXMuZGl2SURdLCB7CiAgICAgICAgd2lkdGg6IHcsCiAgICAgICAgaGVpZ2h0OiBoCiAgICAgIH0pOwogICAgfSwKICAgIHVwZGF0ZVBsb3Q6IGZ1bmN0aW9uIHVwZGF0ZVBsb3QoKSB7CiAgICAgIFBsb3RseS5yZWFjdCh0aGlzLiRyZWZzW3RoaXMuZGl2SURdLCBbXSwgdGhpcy5sb2FkaW5nLmxheW91dCwgdGhpcy5sb2FkaW5nLmNvbmZpZyk7CiAgICAgIHZhciB0cmFjZXMgPSBmb3JtYXRUcmFjZXModGhpcy52YWx1ZSk7CiAgICAgIHRyYWNlcy50aGVuKFBsb3RseS5yZWFjdCh0aGlzLiRyZWZzW3RoaXMuZGl2SURdLCB0cmFjZXMsIHRoaXMubGF5b3V0LCB0aGlzLmNvbmZpZykpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgICdzdG9yZS5zdGF0ZXMuY3VycmVudCc6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICB0aGlzLnVwZGF0ZVBsb3QoKTsKICAgICAgfSwKICAgICAgZGVlcDogdHJ1ZQogICAgfSwKICAgIG1lZGlhbjogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKCkgewogICAgICAgIHRoaXMudXBkYXRlUGxvdCgpOwogICAgICB9LAogICAgICBkZWVwOiB0cnVlCiAgICB9LAogICAgY291bnQ6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICB0aGlzLnJlc2l6ZVBsb3QoKTsKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgIHZhciB0cmFjZXMgPSBmb3JtYXRUcmFjZXModGhpcy52YWx1ZSk7CiAgICB0cmFjZXMudGhlbihmdW5jdGlvbiAodmFsKSB7CiAgICAgIFBsb3RseS5uZXdQbG90KF90aGlzMi4kcmVmc1tfdGhpczIuZGl2SURdLCB2YWwsIF90aGlzMi5sYXlvdXQsIF90aGlzMi5jb25maWcpOwogICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi5yZXNpemVQbG90KCk7CiAgICAgIH0pOwoKICAgICAgX3RoaXMyLnJlc2l6ZVBsb3QoKTsKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\components\\SubComponents\\Plot.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"plotly-div\"\r\n       :ref=\"divID\"\r\n  >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Plotly from 'plotly.js'\r\n  import formatTraces from '../../modules/traces.js'\r\n\r\n  export default {\r\n    inject: ['store'],\r\n    props: ['value', 'name', 'count'],\r\n    data() {\r\n      return {\r\n        median: this.store.cache.states.find(o => o.id === this.store.cache.medianID),\r\n        loading: {\r\n          layout: {\r\n            title: {\r\n              text: 'Loading...'\r\n            },\r\n            showlegend: false,\r\n            width: 0,\r\n            height: 0,\r\n          },\r\n          config: {\r\n            displayModeBar: false,\r\n            displaylogo: false,\r\n          }\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      divID: function() {\r\n        return String(Math.floor(Math.random() * (99999 - 10000 + 1)) + 10000)\r\n      },\r\n      layout: function() {\r\n        let obj = new Object()\r\n        obj.title = {\r\n          text: this.name,\r\n          x: 0,\r\n          pad: {\r\n            l: 20,\r\n          }\r\n        }\r\n        obj.showlegend = false\r\n        obj.legend = {\r\n          title: {\r\n            text: 'Legend',\r\n          },\r\n          orientation: 'h'\r\n        }\r\n        obj.xaxis = {\r\n          title: {\r\n            text: '',\r\n            font: {\r\n              size: 12,\r\n            }\r\n          }\r\n        }\r\n        obj.yaxis = {\r\n          title: {\r\n            font: {\r\n              size: 12,\r\n            }\r\n          }\r\n        }\r\n        obj.margin = {\r\n          t: 60,\r\n          b: 60,\r\n          l: 60,\r\n          r: 60,\r\n        }\r\n        return obj\r\n      },\r\n      config: function() {\r\n        let obj = new Object()\r\n        obj.responsive = false // causes mode bar issue when true\r\n        obj.scrollZoom = true\r\n        obj.displayModeBar = true\r\n        obj.modeBarButtonsToRemove = ['select2d', 'lasso2d', 'zoomIn2d', 'zoomOut2d', 'autoScale2d']\r\n        obj.editable = true\r\n        obj.displaylogo = false\r\n        return obj\r\n      },\r\n    },\r\n    methods: {\r\n      resizePlot: function() {\r\n        if (!this.$refs[this.divID]) {\r\n          return\r\n        }\r\n        let w = document.getElementById('plot-management').offsetWidth;\r\n        let h = window.innerHeight / this.count\r\n        Plotly.relayout(this.$refs[this.divID], { width: w, height: h })\r\n      },\r\n      updatePlot: function() {\r\n        Plotly.react(this.$refs[this.divID], [], this.loading.layout, this.loading.config)\r\n        let traces = formatTraces(this.value)\r\n        traces.then(Plotly.react(this.$refs[this.divID], traces, this.layout, this.config))\r\n      }\r\n    },\r\n    watch: {\r\n      'store.states.current': {\r\n        handler: function() {\r\n          this.updatePlot()\r\n        },\r\n        deep: true\r\n      },\r\n      median: {\r\n        handler: function() {\r\n          this.updatePlot()\r\n        },\r\n        deep: true\r\n      },\r\n      count: {\r\n        handler: function() {\r\n          this.resizePlot()\r\n        },\r\n      },\r\n    },\r\n    mounted() {\r\n      let traces = formatTraces(this.value)\r\n      traces.then(val => {\r\n        Plotly.newPlot(this.$refs[this.divID], val, this.layout, this.config)\r\n        window.addEventListener('resize', () => {\r\n          this.resizePlot()\r\n        })\r\n        this.resizePlot()\r\n      })\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .plotly-div {\r\n    width: 100%;\r\n  }\r\n\r\n  .hide {\r\n    display: none;\r\n  }\r\n</style>\r\n"],"sourceRoot":""}]}