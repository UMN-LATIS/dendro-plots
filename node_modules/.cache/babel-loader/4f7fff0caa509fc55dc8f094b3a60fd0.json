{"remainingRequest":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\components\\SubComponents\\Plot.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\components\\SubComponents\\Plot.vue","mtime":1630683909341},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCBQbG90bHkgZnJvbSAncGxvdGx5LmpzJzsKaW1wb3J0IGZvcm1hdFRyYWNlcyBmcm9tICcuLi8uLi9tb2R1bGVzL3RyYWNlcy5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBpbmplY3Q6IFsnc3RvcmUnXSwKICBwcm9wczogWyd2YWx1ZScsICduYW1lJywgJ2NvdW50J10sCiAgY29tcG9uZW50czoge30sCiAgY29tcHV0ZWQ6IHsKICAgIGRpdklEOiBmdW5jdGlvbiBkaXZJRCgpIHsKICAgICAgcmV0dXJuIFN0cmluZyhNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoOTk5OTkgLSAxMDAwMCArIDEpKSArIDEwMDAwKTsKICAgIH0sCiAgICB0cmFjZXM6IGZ1bmN0aW9uIHRyYWNlcygpIHsKICAgICAgcmV0dXJuIGZvcm1hdFRyYWNlcyh0aGlzLnZhbHVlKTsKICAgIH0sCiAgICBsYXlvdXQ6IGZ1bmN0aW9uIGxheW91dCgpIHsKICAgICAgdmFyIG9iaiA9IG5ldyBPYmplY3QoKTsKICAgICAgb2JqLnRpdGxlID0gewogICAgICAgIHRleHQ6IHRoaXMubmFtZSwKICAgICAgICB4OiAwLAogICAgICAgIHBhZDogewogICAgICAgICAgbDogMjAKICAgICAgICB9CiAgICAgIH07CiAgICAgIG9iai5zaG93bGVnZW5kID0gdHJ1ZTsKICAgICAgb2JqLmxlZ2VuZCA9IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogJ0xlZ2VuZCcKICAgICAgICB9LAogICAgICAgIG9yaWVudGF0aW9uOiAnaCcKICAgICAgfTsKICAgICAgb2JqLnhheGlzID0gewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiAnJywKICAgICAgICAgIGZvbnQ6IHsKICAgICAgICAgICAgc2l6ZTogMTIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH07CiAgICAgIG9iai55YXhpcyA9IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgZm9udDogewogICAgICAgICAgICBzaXplOiAxMgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfTsKICAgICAgb2JqLm1hcmdpbiA9IHsKICAgICAgICB0OiA2MCwKICAgICAgICBiOiA2MCwKICAgICAgICBsOiA2MCwKICAgICAgICByOiA2MAogICAgICB9OwogICAgICByZXR1cm4gb2JqOwogICAgfSwKICAgIGNvbmZpZzogZnVuY3Rpb24gY29uZmlnKCkgewogICAgICB2YXIgb2JqID0gbmV3IE9iamVjdCgpOwogICAgICBvYmoucmVzcG9uc2l2ZSA9IGZhbHNlOyAvLyBjYXVzZXMgbW9kZSBiYXIgaXNzdWUgd2hlbiB0cnVlCgogICAgICBvYmouc2Nyb2xsWm9vbSA9IHRydWU7CiAgICAgIG9iai5kaXNwbGF5TW9kZUJhciA9IHRydWU7CiAgICAgIG9iai5tb2RlQmFyQnV0dG9uc1RvUmVtb3ZlID0gWydzZWxlY3QyZCcsICdsYXNzbzJkJywgJ3pvb21JbjJkJywgJ3pvb21PdXQyZCcsICdhdXRvU2NhbGUyZCddOwogICAgICBvYmouZWRpdGFibGUgPSB0cnVlOwogICAgICBvYmouZGlzcGxheWxvZ28gPSBmYWxzZTsKICAgICAgcmV0dXJuIG9iajsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHJlc2l6ZVBsb3Q6IGZ1bmN0aW9uIHJlc2l6ZVBsb3QoKSB7CiAgICAgIGlmICghdGhpcy4kcmVmc1t0aGlzLmRpdklEXSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdmFyIHcgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdwbG90bHktZGl2JylbdGhpcy52YWx1ZSAtIDFdLm9mZnNldFdpZHRoOwogICAgICB2YXIgaCA9IHdpbmRvdy5pbm5lckhlaWdodCAvIHRoaXMuY291bnQ7CiAgICAgIFBsb3RseS5yZWxheW91dCh0aGlzLiRyZWZzW3RoaXMuZGl2SURdLCB7CiAgICAgICAgd2lkdGg6IHcsCiAgICAgICAgaGVpZ2h0OiBoCiAgICAgIH0pOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgICdzdG9yZS5zdGF0ZXMuY3VycmVudCc6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICBQbG90bHkucmVhY3QodGhpcy4kcmVmc1t0aGlzLmRpdklEXSwgdGhpcy50cmFjZXMsIHRoaXMubGF5b3V0LCB0aGlzLmNvbmZpZyk7CiAgICAgIH0sCiAgICAgIGRlZXA6IHRydWUKICAgIH0sCiAgICBjb3VudDogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKCkgewogICAgICAgIHRoaXMucmVzaXplUGxvdCgpOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBQbG90bHkubmV3UGxvdCh0aGlzLiRyZWZzW3RoaXMuZGl2SURdLCB0aGlzLnRyYWNlcywgdGhpcy5sYXlvdXQsIHRoaXMuY29uZmlnKTsKICAgIHRoaXMucmVzaXplUGxvdCgpOwogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGZ1bmN0aW9uICgpIHsKICAgICAgX3RoaXMucmVzaXplUGxvdCgpOwogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\components\\SubComponents\\Plot.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"plotly-div\"\r\n       :ref=\"divID\"\r\n  >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Plotly from 'plotly.js'\r\n  import formatTraces from '../../modules/traces.js'\r\n\r\n  export default {\r\n    inject: ['store'],\r\n    props: ['value', 'name', 'count'],\r\n    components: { },\r\n    computed: {\r\n      divID: function() {\r\n        return String(Math.floor(Math.random() * (99999 - 10000 + 1)) + 10000)\r\n      },\r\n      traces: function() {\r\n        return formatTraces(this.value)\r\n      },\r\n      layout: function() {\r\n        let obj = new Object()\r\n        obj.title = {\r\n          text: this.name,\r\n          x: 0,\r\n          pad: {\r\n            l: 20,\r\n          }\r\n        }\r\n        obj.showlegend = true\r\n        obj.legend = {\r\n          title: {\r\n            text: 'Legend',\r\n          },\r\n          orientation: 'h'\r\n        }\r\n        obj.xaxis = {\r\n          title: {\r\n            text: '',\r\n            font: {\r\n              size: 12,\r\n            }\r\n          }\r\n        }\r\n        obj.yaxis = {\r\n          title: {\r\n            font: {\r\n              size: 12,\r\n            }\r\n          }\r\n        }\r\n        obj.margin = {\r\n          t: 60,\r\n          b: 60,\r\n          l: 60,\r\n          r: 60,\r\n        }\r\n        return obj\r\n      },\r\n      config: function() {\r\n        let obj = new Object()\r\n        obj.responsive = false // causes mode bar issue when true\r\n        obj.scrollZoom = true\r\n        obj.displayModeBar = true\r\n        obj.modeBarButtonsToRemove = ['select2d', 'lasso2d', 'zoomIn2d', 'zoomOut2d', 'autoScale2d']\r\n        obj.editable = true\r\n        obj.displaylogo = false\r\n        return obj\r\n      }\r\n    },\r\n    methods: {\r\n      resizePlot: function() {\r\n        if (!this.$refs[this.divID]) {\r\n          return\r\n        }\r\n        let w = document.getElementsByClassName('plotly-div')[this.value - 1].offsetWidth;\r\n        let h = window.innerHeight / this.count\r\n        Plotly.relayout(this.$refs[this.divID], { width: w, height: h })\r\n      }\r\n    },\r\n    watch: {\r\n      'store.states.current': {\r\n        handler: function() {\r\n          Plotly.react(this.$refs[this.divID], this.traces, this.layout, this.config)\r\n        },\r\n        deep: true\r\n      },\r\n      count: {\r\n        handler: function() {\r\n          this.resizePlot()\r\n        },\r\n      },\r\n    },\r\n    mounted() {\r\n      Plotly.newPlot(this.$refs[this.divID], this.traces, this.layout, this.config)\r\n      this.resizePlot()\r\n      window.addEventListener('resize', () => {\r\n        this.resizePlot()\r\n      })\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .plotly-div {\r\n    width: 100%;\r\n  }\r\n</style>\r\n"],"sourceRoot":""}]}