{"remainingRequest":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\components\\SubComponents\\Plot.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\components\\SubComponents\\Plot.vue","mtime":1631127776985},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgUGxvdGx5IGZyb20gJ3Bsb3RseS5qcyc7CmltcG9ydCBmb3JtYXRUcmFjZXMgZnJvbSAnLi4vLi4vbW9kdWxlcy90cmFjZXMuanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgaW5qZWN0OiBbJ3N0b3JlJ10sCiAgcHJvcHM6IFsndmFsdWUnLCAnbmFtZScsICdjb3VudCddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiB7CiAgICAgIG1lZGlhbjogdGhpcy5zdG9yZS5jYWNoZS5zdGF0ZXMuZmluZChmdW5jdGlvbiAobykgewogICAgICAgIHJldHVybiBvLmlkID09PSBfdGhpcy5zdG9yZS5jYWNoZS5tZWRpYW5JRDsKICAgICAgfSkKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgZGl2SUQ6IGZ1bmN0aW9uIGRpdklEKCkgewogICAgICByZXR1cm4gU3RyaW5nKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqICg5OTk5OSAtIDEwMDAwICsgMSkpICsgMTAwMDApOwogICAgfSwKICAgIHRyYWNlczogZnVuY3Rpb24gdHJhY2VzKCkgewogICAgICByZXR1cm4gZm9ybWF0VHJhY2VzKHRoaXMudmFsdWUpOwogICAgfSwKICAgIGxheW91dDogZnVuY3Rpb24gbGF5b3V0KCkgewogICAgICB2YXIgb2JqID0gbmV3IE9iamVjdCgpOwogICAgICBvYmoudGl0bGUgPSB7CiAgICAgICAgdGV4dDogdGhpcy5uYW1lLAogICAgICAgIHg6IDAsCiAgICAgICAgcGFkOiB7CiAgICAgICAgICBsOiAyMAogICAgICAgIH0KICAgICAgfTsKICAgICAgb2JqLnNob3dsZWdlbmQgPSB0cnVlOwogICAgICBvYmoubGVnZW5kID0gewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiAnTGVnZW5kJwogICAgICAgIH0sCiAgICAgICAgb3JpZW50YXRpb246ICdoJwogICAgICB9OwogICAgICBvYmoueGF4aXMgPSB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICcnLAogICAgICAgICAgZm9udDogewogICAgICAgICAgICBzaXplOiAxMgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfTsKICAgICAgb2JqLnlheGlzID0gewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICBmb250OiB7CiAgICAgICAgICAgIHNpemU6IDEyCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9OwogICAgICBvYmoubWFyZ2luID0gewogICAgICAgIHQ6IDYwLAogICAgICAgIGI6IDYwLAogICAgICAgIGw6IDYwLAogICAgICAgIHI6IDYwCiAgICAgIH07CiAgICAgIHJldHVybiBvYmo7CiAgICB9LAogICAgY29uZmlnOiBmdW5jdGlvbiBjb25maWcoKSB7CiAgICAgIHZhciBvYmogPSBuZXcgT2JqZWN0KCk7CiAgICAgIG9iai5yZXNwb25zaXZlID0gZmFsc2U7IC8vIGNhdXNlcyBtb2RlIGJhciBpc3N1ZSB3aGVuIHRydWUKCiAgICAgIG9iai5zY3JvbGxab29tID0gdHJ1ZTsKICAgICAgb2JqLmRpc3BsYXlNb2RlQmFyID0gdHJ1ZTsKICAgICAgb2JqLm1vZGVCYXJCdXR0b25zVG9SZW1vdmUgPSBbJ3NlbGVjdDJkJywgJ2xhc3NvMmQnLCAnem9vbUluMmQnLCAnem9vbU91dDJkJywgJ2F1dG9TY2FsZTJkJ107CiAgICAgIG9iai5lZGl0YWJsZSA9IHRydWU7CiAgICAgIG9iai5kaXNwbGF5bG9nbyA9IGZhbHNlOwogICAgICByZXR1cm4gb2JqOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcmVzaXplUGxvdDogZnVuY3Rpb24gcmVzaXplUGxvdCgpIHsKICAgICAgaWYgKCF0aGlzLiRyZWZzW3RoaXMuZGl2SURdKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgdyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwbG90LW1hbmFnZW1lbnQnKS5vZmZzZXRXaWR0aDsKICAgICAgdmFyIGggPSB3aW5kb3cuaW5uZXJIZWlnaHQgLyB0aGlzLmNvdW50OwogICAgICBQbG90bHkucmVsYXlvdXQodGhpcy4kcmVmc1t0aGlzLmRpdklEXSwgewogICAgICAgIHdpZHRoOiB3LAogICAgICAgIGhlaWdodDogaAogICAgICB9KTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAnc3RvcmUuc3RhdGVzLmN1cnJlbnQnOiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIoKSB7CiAgICAgICAgUGxvdGx5LnJlYWN0KHRoaXMuJHJlZnNbdGhpcy5kaXZJRF0sIHRoaXMudHJhY2VzLCB0aGlzLmxheW91dCwgdGhpcy5jb25maWcpOwogICAgICB9LAogICAgICBkZWVwOiB0cnVlCiAgICB9LAogICAgJ3N0b3JlLmNhY2hlLnN0YXRlcyc6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICBQbG90bHkucmVhY3QodGhpcy4kcmVmc1t0aGlzLmRpdklEXSwgdGhpcy50cmFjZXMsIHRoaXMubGF5b3V0LCB0aGlzLmNvbmZpZyk7CiAgICAgIH0sCiAgICAgIGRlZXA6IHRydWUKICAgIH0sCiAgICBjb3VudDogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKCkgewogICAgICAgIHRoaXMucmVzaXplUGxvdCgpOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgUGxvdGx5Lm5ld1Bsb3QodGhpcy4kcmVmc1t0aGlzLmRpdklEXSwgdGhpcy50cmFjZXMsIHRoaXMubGF5b3V0LCB0aGlzLmNvbmZpZyk7CiAgICB0aGlzLnJlc2l6ZVBsb3QoKTsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBmdW5jdGlvbiAoKSB7CiAgICAgIF90aGlzMi5yZXNpemVQbG90KCk7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\components\\SubComponents\\Plot.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"plotly-div\"\r\n       :ref=\"divID\"\r\n  >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Plotly from 'plotly.js'\r\n  import formatTraces from '../../modules/traces.js'\r\n\r\n  export default {\r\n    inject: ['store'],\r\n    props: ['value', 'name', 'count'],\r\n    data() {\r\n      return {\r\n        median: this.store.cache.states.find(o => o.id === this.store.cache.medianID)\r\n      }\r\n    },\r\n    computed: {\r\n      divID: function() {\r\n        return String(Math.floor(Math.random() * (99999 - 10000 + 1)) + 10000)\r\n      },\r\n      traces: function() {\r\n        return formatTraces(this.value)\r\n      },\r\n      layout: function() {\r\n        let obj = new Object()\r\n        obj.title = {\r\n          text: this.name,\r\n          x: 0,\r\n          pad: {\r\n            l: 20,\r\n          }\r\n        }\r\n        obj.showlegend = true\r\n        obj.legend = {\r\n          title: {\r\n            text: 'Legend',\r\n          },\r\n          orientation: 'h'\r\n        }\r\n        obj.xaxis = {\r\n          title: {\r\n            text: '',\r\n            font: {\r\n              size: 12,\r\n            }\r\n          }\r\n        }\r\n        obj.yaxis = {\r\n          title: {\r\n            font: {\r\n              size: 12,\r\n            }\r\n          }\r\n        }\r\n        obj.margin = {\r\n          t: 60,\r\n          b: 60,\r\n          l: 60,\r\n          r: 60,\r\n        }\r\n        return obj\r\n      },\r\n      config: function() {\r\n        let obj = new Object()\r\n        obj.responsive = false // causes mode bar issue when true\r\n        obj.scrollZoom = true\r\n        obj.displayModeBar = true\r\n        obj.modeBarButtonsToRemove = ['select2d', 'lasso2d', 'zoomIn2d', 'zoomOut2d', 'autoScale2d']\r\n        obj.editable = true\r\n        obj.displaylogo = false\r\n        return obj\r\n      }\r\n    },\r\n    methods: {\r\n      resizePlot: function() {\r\n        if (!this.$refs[this.divID]) {\r\n          return\r\n        }\r\n        let w = document.getElementById('plot-management').offsetWidth;\r\n        let h = window.innerHeight / this.count\r\n        Plotly.relayout(this.$refs[this.divID], { width: w, height: h })\r\n      }\r\n    },\r\n    watch: {\r\n      'store.states.current': {\r\n        handler: function() {\r\n          Plotly.react(this.$refs[this.divID], this.traces, this.layout, this.config)\r\n        },\r\n        deep: true\r\n      },\r\n      'store.cache.states': {\r\n        handler: function() {\r\n          Plotly.react(this.$refs[this.divID], this.traces, this.layout, this.config)\r\n        },\r\n        deep: true\r\n      },\r\n      count: {\r\n        handler: function() {\r\n          this.resizePlot()\r\n        },\r\n      },\r\n    },\r\n    mounted() {\r\n      Plotly.newPlot(this.$refs[this.divID], this.traces, this.layout, this.config)\r\n      this.resizePlot()\r\n      window.addEventListener('resize', () => {\r\n        this.resizePlot()\r\n      })\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .plotly-div {\r\n    width: 100%;\r\n  }\r\n</style>\r\n"],"sourceRoot":""}]}