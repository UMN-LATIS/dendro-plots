{"remainingRequest":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\modules\\index.js","dependencies":[{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\src\\modules\\index.js","mtime":1630610638436},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUuanMnOwoKdmFyIGNyZWF0ZUluZGV4ID0gZnVuY3Rpb24gY3JlYXRlSW5kZXgoeCwgeSwgc3BsaW5lLCBmcmVxLCBpZCkgewogIGNvbnNvbGUubG9nKCdjcmVhdGVkIGluZGV4Jyk7CiAgdmFyIHhBcnIgPSB4OwogIHZhciB5QXJyID0geC5tYXAoZnVuY3Rpb24gKGUsIGkpIHsKICAgIHZhciBqID0gc3BsaW5lLnguaW5kZXhPZihlKTsKCiAgICBpZiAoaiA9PT0gLTEpIHsKICAgICAgLy8gZmluZCBjbG9zZXN0IHZhbHVlIHRvIHVzZSBmb3IgY2FsY3VsYXRpb24KICAgICAgdmFyIG4gPSBzcGxpbmUueC5yZWR1Y2UoZnVuY3Rpb24gKHByZXYsIGN1cnIpIHsKICAgICAgICByZXR1cm4gTWF0aC5hYnMoY3VyciAtIGUpIDwgTWF0aC5hYnMocHJldiAtIGUpID8gY3VyciA6IHByZXY7CiAgICAgIH0pOwogICAgICBqID0gc3BsaW5lLnguaW5kZXhPZihuKTsKICAgIH0KCiAgICByZXR1cm4geVtpXSAvIHNwbGluZS55W2pdOwogIH0pOyAvLyBzYXZlIGluZGV4IHRvIGluZGV4IGNhY2hlIGluIHN0b3JlLmpzCgogIHZhciBpbmRleE9iajsKICB2YXIgaW5kZXhFeGlzdHMgPSBzdG9yZS5jYWNoZS5pbmRleC5maW5kKGZ1bmN0aW9uIChvKSB7CiAgICByZXR1cm4gby5pZCA9PSBpZDsKICB9KTsKCiAgaWYgKGluZGV4RXhpc3RzKSB7CiAgICBpbmRleE9iaiA9IGluZGV4RXhpc3RzOwogIH0gZWxzZSB7CiAgICBpbmRleE9iaiA9IG5ldyBPYmplY3QoKTsKICAgIGluZGV4T2JqLmlkID0gaWQ7CiAgICBzdG9yZS5jYWNoZS5pbmRleC5wdXNoKGluZGV4T2JqKTsKICB9CgogIGluZGV4T2JqW2ZyZXFdID0gewogICAgeDogeEFyciwKICAgIHk6IHlBcnIKICB9OwogIHJldHVybiB7CiAgICB4OiB4QXJyLAogICAgeTogeUFycgogIH07Cn07CgpleHBvcnQgZGVmYXVsdCBjcmVhdGVJbmRleDs="},{"version":3,"sources":["C:/Users/JThorneUMN/Documents/GitHub/dendro-plots/src/modules/index.js"],"names":["store","createIndex","x","y","spline","freq","id","console","log","xArr","yArr","map","e","i","j","indexOf","n","reduce","prev","curr","Math","abs","indexObj","indexExists","cache","index","find","o","Object","push"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAASC,CAAT,EAAYC,CAAZ,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,EAA7B,EAAiC;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEA,MAAIC,IAAI,GAAGP,CAAX;AACA,MAAIQ,IAAI,GAAGR,CAAC,CAACS,GAAF,CAAM,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACzB,QAAIC,CAAC,GAAGV,MAAM,CAACF,CAAP,CAASa,OAAT,CAAiBH,CAAjB,CAAR;;AACA,QAAIE,CAAC,KAAK,CAAC,CAAX,EAAc;AACZ;AACA,UAAIE,CAAC,GAAGZ,MAAM,CAACF,CAAP,CAASe,MAAT,CAAgB,UAACC,IAAD,EAAOC,IAAP,EAAgB;AACtC,eAAQC,IAAI,CAACC,GAAL,CAASF,IAAI,GAAGP,CAAhB,IAAqBQ,IAAI,CAACC,GAAL,CAASH,IAAI,GAAGN,CAAhB,CAArB,GAA0CO,IAA1C,GAAiDD,IAAzD;AACD,OAFO,CAAR;AAGAJ,MAAAA,CAAC,GAAGV,MAAM,CAACF,CAAP,CAASa,OAAT,CAAiBC,CAAjB,CAAJ;AACD;;AACD,WAAOb,CAAC,CAACU,CAAD,CAAD,GAAOT,MAAM,CAACD,CAAP,CAASW,CAAT,CAAd;AACD,GAVU,CAAX,CAJmD,CAgBnD;;AACA,MAAIQ,QAAJ;AACA,MAAIC,WAAW,GAAGvB,KAAK,CAACwB,KAAN,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACrB,EAAF,IAAQA,EAAZ;AAAA,GAAxB,CAAlB;;AACA,MAAIiB,WAAJ,EAAiB;AACfD,IAAAA,QAAQ,GAAGC,WAAX;AACD,GAFD,MAEO;AACLD,IAAAA,QAAQ,GAAG,IAAIM,MAAJ,EAAX;AACAN,IAAAA,QAAQ,CAAChB,EAAT,GAAcA,EAAd;AACAN,IAAAA,KAAK,CAACwB,KAAN,CAAYC,KAAZ,CAAkBI,IAAlB,CAAuBP,QAAvB;AACD;;AACDA,EAAAA,QAAQ,CAACjB,IAAD,CAAR,GAAiB;AACfH,IAAAA,CAAC,EAAEO,IADY;AAEfN,IAAAA,CAAC,EAAEO;AAFY,GAAjB;AAKA,SAAO;AAAER,IAAAA,CAAC,EAAEO,IAAL;AAAWN,IAAAA,CAAC,EAAEO;AAAd,GAAP;AACD,CAhCD;;AAkCA,eAAeT,WAAf","sourcesContent":["import store from './store.js'\r\n\r\nconst createIndex = function(x, y, spline, freq, id) {\r\n  console.log('created index')\r\n\r\n  let xArr = x\r\n  let yArr = x.map((e, i) => {\r\n    let j = spline.x.indexOf(e)\r\n    if (j === -1) {\r\n      // find closest value to use for calculation\r\n      let n = spline.x.reduce((prev, curr) => {\r\n        return (Math.abs(curr - e) < Math.abs(prev - e) ? curr : prev);\r\n      })\r\n      j = spline.x.indexOf(n)\r\n    }\r\n    return y[i] / spline.y[j]\r\n  })\r\n\r\n  // save index to index cache in store.js\r\n  let indexObj\r\n  let indexExists = store.cache.index.find(o => o.id == id)\r\n  if (indexExists) {\r\n    indexObj = indexExists\r\n  } else {\r\n    indexObj = new Object()\r\n    indexObj.id = id\r\n    store.cache.index.push(indexObj)\r\n  }\r\n  indexObj[freq] = {\r\n    x: xArr,\r\n    y: yArr,\r\n  }\r\n\r\n  return { x: xArr, y: yArr }\r\n}\r\n\r\nexport default createIndex\r\n"]}]}