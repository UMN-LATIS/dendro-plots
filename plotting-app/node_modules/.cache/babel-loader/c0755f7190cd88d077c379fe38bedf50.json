{"remainingRequest":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\src\\modules\\store.js","dependencies":[{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\src\\modules\\store.js","mtime":1630441374200},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L1VzZXJzL0pUaG9ybmVVTU4vRG9jdW1lbnRzL0dpdEh1Yi9kZW5kcm8tcGxvdHMvcGxvdHRpbmctYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgeyByZWFjdGl2ZSB9IGZyb20gJ3Z1ZSc7CnZhciBzdGF0ZXMgPSByZWFjdGl2ZSh7CiAgcGFzdDogW10sCiAgY3VycmVudDogW10sCiAgZnV0dXJlOiBbXQp9KTsKdmFyIGNhY2hlID0gcmVhY3RpdmUoewogIHJhdzogW10sCiAgc3BsaW5lczogewogICAgcmF3OiBbXSwKICAgIGluZGV4OiBbXQogIH0sCiAgaW5kZXg6IFtdLAogIG1vZGFsczogW10sCiAgcGxvdHM6IFt7CiAgICB2YWx1ZTogMSwKICAgIG5hbWU6ICdQbG90IDEnCiAgfSwgewogICAgdmFsdWU6IDIsCiAgICBuYW1lOiAnUGxvdCAyJwogIH1dLAogIGxvYWRTZXF1ZW5jZTogW10KfSk7CnZhciBtZXRob2RzID0gewogIGxvYWREYXRhOiBmdW5jdGlvbiBsb2FkRGF0YShkYXRhKSB7CiAgICB0aGlzLnNhdmVDdXJyZW50KCk7CgogICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGRhdGEpLAogICAgICAgIF9zdGVwOwoKICAgIHRyeSB7CiAgICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKCkgewogICAgICAgIHZhciBzZXQgPSBfc3RlcC52YWx1ZTsKICAgICAgICB2YXIgZXhpc3RpbmdTZXQgPSBzdGF0ZXMuY3VycmVudC5maW5kKGZ1bmN0aW9uIChvYmopIHsKICAgICAgICAgIHJldHVybiBvYmoubmFtZSA9PSBzZXQubmFtZTsKICAgICAgICB9KTsKCiAgICAgICAgaWYgKGV4aXN0aW5nU2V0KSB7CiAgICAgICAgICB2YXIgbiA9IHN0YXRlcy5jdXJyZW50LmZpbHRlcihmdW5jdGlvbiAob2JqKSB7CiAgICAgICAgICAgIHJldHVybiBvYmoubmFtZS5zcGxpdCgnICgnKVswXSA9PSBzZXQubmFtZTsKICAgICAgICAgIH0pLmxlbmd0aDsKICAgICAgICAgIHNldC5uYW1lID0gc2V0Lm5hbWUgKyAnICgnICsgbiArICcpJzsKICAgICAgICB9CgogICAgICAgIHZhciBuZXdTdGF0ZSA9IG5ldyBPYmplY3QoKTsgLy8gc2V0IElEcyBhcmUgcmFuZG9tIDUgZGlnaXQgbnVtYmVycwoKICAgICAgICB2YXIgaWQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoOTk5OTkgLSAxMDAwMCArIDEpKSArIDEwMDAwOyAvLyBkZWZhdWx0IHN0YXRlIHZhbHVlcwoKICAgICAgICBuZXdTdGF0ZS5pZCA9IGlkOwogICAgICAgIG5ld1N0YXRlLm5hbWUgPSBzZXQubmFtZTsKICAgICAgICBuZXdTdGF0ZS5maWxlID0gc2V0LmZpbGVOYW1lOwogICAgICAgIG5ld1N0YXRlLmNvbG9yID0gJyNGRjAwMDAnOwogICAgICAgIG5ld1N0YXRlLmNvbG9yU3RhdGUgPSB0cnVlOwogICAgICAgIG5ld1N0YXRlLnJhd1BvaW50c0FjdGl2ZSA9IGZhbHNlOwogICAgICAgIG5ld1N0YXRlLnJhd1NwbGluZUZyZXEgPSBmYWxzZTsKICAgICAgICBuZXdTdGF0ZS5yYXdQbG90TG9jYXRpb24gPSAxOwogICAgICAgIG5ld1N0YXRlLmluZGV4UG9pbnRzRnJlcSA9IGZhbHNlOwogICAgICAgIG5ld1N0YXRlLmluZGV4U3BsaW5lRnJlcSA9IGZhbHNlOwogICAgICAgIG5ld1N0YXRlLmluZGV4UGxvdExvY2F0aW9uID0gMTsKICAgICAgICBzdGF0ZXMuY3VycmVudC5wdXNoKG5ld1N0YXRlKTsgLy8gY2FjaGUgZGF0YQoKICAgICAgICB2YXIgbmV3UG9pbnRzID0gbmV3IE9iamVjdCgpOwogICAgICAgIG5ld1BvaW50cy5pZCA9IGlkOwogICAgICAgIG5ld1BvaW50cy54ID0gc2V0Lng7CiAgICAgICAgbmV3UG9pbnRzLnkgPSBzZXQueTsKICAgICAgICBjYWNoZS5yYXcucHVzaChuZXdQb2ludHMpOyAvLyBkZWZhdWx0IGFjdGl2ZSBjYWNoZSB2YWx1ZXMKCiAgICAgICAgdmFyIG5ld01vZGFsID0gbmV3IE9iamVjdCgpOwogICAgICAgIG5ld01vZGFsLmlkID0gaWQ7CiAgICAgICAgbmV3TW9kYWwuYWN0aXZlID0gZmFsc2U7CiAgICAgICAgbmV3TW9kYWwudG9wID0gMDsKICAgICAgICBuZXdNb2RhbC5vdXRPZkJvdW5kcyA9IGZhbHNlOwogICAgICAgIGNhY2hlLm1vZGFscy5wdXNoKG5ld01vZGFsKTsgLy8gZXN0YWJsaXNoIGRlZmF1bHQgbG9hZCBzZXF1ZW5jZQoKICAgICAgICBjYWNoZS5sb2FkU2VxdWVuY2UucHVzaChuZXdTdGF0ZS5pZCk7CiAgICAgIH07CgogICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgIF9sb29wKCk7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgfSBmaW5hbGx5IHsKICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgIH0KICB9LAogIGFkZFRvOiBmdW5jdGlvbiBhZGRUbyhkYXRhLCBwcm9wZXJ0eSkgewogICAgc3RhdGVzW3Byb3BlcnR5XS5wdXNoKGRhdGEpOwogIH0sCiAgdW5kbzogZnVuY3Rpb24gdW5kbygpIHsKICAgIHZhciByZWNlbnRTdGF0ZSA9IHN0YXRlcy5wYXN0W3N0YXRlcy5wYXN0Lmxlbmd0aCAtIDFdOwogICAgc3RhdGVzLnBhc3QucG9wKCk7CiAgICB0aGlzLmFkZFRvKHN0YXRlcy5jdXJyZW50LCAnZnV0dXJlJyk7CiAgICBzdGF0ZXMuY3VycmVudCA9IHJlY2VudFN0YXRlOwogIH0sCiAgcmVkbzogZnVuY3Rpb24gcmVkbygpIHsKICAgIHZhciByZWNlbnRTdGF0ZSA9IHN0YXRlcy5mdXR1cmVbc3RhdGVzLmZ1dHVyZS5sZW5ndGggLSAxXTsKICAgIHN0YXRlcy5mdXR1cmUucG9wKCk7CiAgICB0aGlzLmFkZFRvKHN0YXRlcy5jdXJyZW50LCAncGFzdCcpOwogICAgc3RhdGVzLmN1cnJlbnQgPSByZWNlbnRTdGF0ZTsKICB9LAogIHNhdmVDdXJyZW50OiBmdW5jdGlvbiBzYXZlQ3VycmVudCgpIHsKICAgIHN0YXRlcy5mdXR1cmUgPSBbXTsKICAgIHZhciBjdXJyZW50Q29weSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoc3RhdGVzLmN1cnJlbnQpKTsKICAgIHN0YXRlcy5wYXN0LnB1c2goY3VycmVudENvcHkpOwogIH0sCiAgbmV3Q3VycmVudDogZnVuY3Rpb24gbmV3Q3VycmVudChkYXRhLCBpZCwgcHJvcGVydHkpIHsKICAgIHRoaXMuc2F2ZUN1cnJlbnQoKTsKCiAgICBpZiAoaWQgJiYgcHJvcGVydHkpIHsKICAgICAgdmFyIGN1cnJlbnRTZXQgPSBzdGF0ZXMuY3VycmVudC5maW5kKGZ1bmN0aW9uIChvYmopIHsKICAgICAgICByZXR1cm4gb2JqLmlkID09IGlkOwogICAgICB9KTsKICAgICAgY3VycmVudFNldFtwcm9wZXJ0eV0gPSBkYXRhOwogICAgfSBlbHNlIHsKICAgICAgc3RhdGVzLmN1cnJlbnQgPSBkYXRhOwogICAgfQogIH0sCiAgbW9kaWZ5Q3VycmVudDogZnVuY3Rpb24gbW9kaWZ5Q3VycmVudChkYXRhLCBpZCwgcHJvcGVydHkpIHsKICAgIHZhciBjdXJyZW50U2V0ID0gc3RhdGVzLmN1cnJlbnQuZmluZChmdW5jdGlvbiAob2JqKSB7CiAgICAgIHJldHVybiBvYmouaWQgPT0gaWQ7CiAgICB9KTsKICAgIGN1cnJlbnRTZXRbcHJvcGVydHldID0gZGF0YTsKICB9LAogIHJlbW92ZUN1cnJlbnQ6IGZ1bmN0aW9uIHJlbW92ZUN1cnJlbnQoaWQpIHsKICAgIHRoaXMuc2F2ZUN1cnJlbnQoKTsKICAgIHZhciBzZXRJbmRleCA9IHN0YXRlcy5jdXJyZW50LmZpbmRJbmRleChmdW5jdGlvbiAob2JqKSB7CiAgICAgIHJldHVybiBvYmouaWQgPT0gaWQ7CiAgICB9KTsKICAgIHN0YXRlcy5jdXJyZW50LnNwbGljZShzZXRJbmRleCwgMSk7CiAgfSwKICB1cGRhdGVDYWNoZTogZnVuY3Rpb24gdXBkYXRlQ2FjaGUobmFtZSwgaWQsIHByb3AsIGRhdGEpIHsKICAgIHZhciBvYmogPSBjYWNoZVtuYW1lXS5maW5kKGZ1bmN0aW9uIChvKSB7CiAgICAgIHJldHVybiBvLmlkID09IGlkOwogICAgfSk7CiAgICBvYmpbcHJvcF0gPSBkYXRhOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlczogc3RhdGVzLAogIGNhY2hlOiBjYWNoZSwKICBtZXRob2RzOiBtZXRob2RzCn07"},{"version":3,"sources":["C:/Users/JThorneUMN/Documents/GitHub/dendro-plots/plotting-app/src/modules/store.js"],"names":["reactive","states","past","current","future","cache","raw","splines","index","modals","plots","value","name","loadSequence","methods","loadData","data","saveCurrent","set","existingSet","find","obj","n","filter","split","length","newState","Object","id","Math","floor","random","file","fileName","color","colorState","rawPointsActive","rawSplineFreq","rawPlotLocation","indexPointsFreq","indexSplineFreq","indexPlotLocation","push","newPoints","x","y","newModal","active","top","outOfBounds","addTo","property","undo","recentState","pop","redo","currentCopy","JSON","parse","stringify","newCurrent","currentSet","modifyCurrent","removeCurrent","setIndex","findIndex","splice","updateCache","prop","o"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,KAAzB;AAEA,IAAMC,MAAM,GAAGD,QAAQ,CAAC;AACtBE,EAAAA,IAAI,EAAE,EADgB;AAEtBC,EAAAA,OAAO,EAAE,EAFa;AAGtBC,EAAAA,MAAM,EAAE;AAHc,CAAD,CAAvB;AAOA,IAAMC,KAAK,GAAGL,QAAQ,CAAC;AACrBM,EAAAA,GAAG,EAAE,EADgB;AAErBC,EAAAA,OAAO,EAAE;AACGD,IAAAA,GAAG,EAAE,EADR;AAEGE,IAAAA,KAAK,EAAE;AAFV,GAFY;AAMrBA,EAAAA,KAAK,EAAE,EANc;AAOrBC,EAAAA,MAAM,EAAE,EAPa;AAQrBC,EAAAA,KAAK,EAAE,CAAC;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAAD,EACC;AAAED,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GADD,CARc;AAUrBC,EAAAA,YAAY,EAAE;AAVO,CAAD,CAAtB;AAaA,IAAMC,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAE,kBAASC,IAAT,EAAe;AACvB,SAAKC,WAAL;;AADuB,+CAGLD,IAHK;AAAA;;AAAA;AAAA;AAAA,YAGZE,GAHY;AAIrB,YAAIC,WAAW,GAAGlB,MAAM,CAACE,OAAP,CAAeiB,IAAf,CAAoB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACT,IAAJ,IAAYM,GAAG,CAACN,IAApB;AAAA,SAAvB,CAAlB;;AACA,YAAIO,WAAJ,EAAiB;AACf,cAAIG,CAAC,GAAGrB,MAAM,CAACE,OAAP,CAAeoB,MAAf,CAAsB,UAAAF,GAAG;AAAA,mBAAIA,GAAG,CAACT,IAAJ,CAASY,KAAT,CAAe,IAAf,EAAqB,CAArB,KAA2BN,GAAG,CAACN,IAAnC;AAAA,WAAzB,EAAkEa,MAA1E;AACAP,UAAAA,GAAG,CAACN,IAAJ,GAAWM,GAAG,CAACN,IAAJ,GAAW,IAAX,GAAkBU,CAAlB,GAAsB,GAAjC;AACD;;AAED,YAAII,QAAQ,GAAG,IAAIC,MAAJ,EAAf,CAVqB,CAWrB;;AACA,YAAIC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,QAAQ,KAAR,GAAgB,CAAjC,CAAX,IAAkD,KAA3D,CAZqB,CAcrB;;AACAL,QAAAA,QAAQ,CAACE,EAAT,GAAcA,EAAd;AACAF,QAAAA,QAAQ,CAACd,IAAT,GAAgBM,GAAG,CAACN,IAApB;AACAc,QAAAA,QAAQ,CAACM,IAAT,GAAgBd,GAAG,CAACe,QAApB;AACAP,QAAAA,QAAQ,CAACQ,KAAT,GAAiB,SAAjB;AACAR,QAAAA,QAAQ,CAACS,UAAT,GAAsB,IAAtB;AAEAT,QAAAA,QAAQ,CAACU,eAAT,GAA2B,KAA3B;AACAV,QAAAA,QAAQ,CAACW,aAAT,GAAyB,KAAzB;AACAX,QAAAA,QAAQ,CAACY,eAAT,GAA2B,CAA3B;AAEAZ,QAAAA,QAAQ,CAACa,eAAT,GAA2B,KAA3B;AACAb,QAAAA,QAAQ,CAACc,eAAT,GAA2B,KAA3B;AACAd,QAAAA,QAAQ,CAACe,iBAAT,GAA6B,CAA7B;AAEAxC,QAAAA,MAAM,CAACE,OAAP,CAAeuC,IAAf,CAAoBhB,QAApB,EA7BqB,CA+BrB;;AACA,YAAIiB,SAAS,GAAG,IAAIhB,MAAJ,EAAhB;AACAgB,QAAAA,SAAS,CAACf,EAAV,GAAeA,EAAf;AACAe,QAAAA,SAAS,CAACC,CAAV,GAAc1B,GAAG,CAAC0B,CAAlB;AACAD,QAAAA,SAAS,CAACE,CAAV,GAAc3B,GAAG,CAAC2B,CAAlB;AACAxC,QAAAA,KAAK,CAACC,GAAN,CAAUoC,IAAV,CAAeC,SAAf,EApCqB,CAsCrB;;AACA,YAAIG,QAAQ,GAAG,IAAInB,MAAJ,EAAf;AACAmB,QAAAA,QAAQ,CAAClB,EAAT,GAAcA,EAAd;AACAkB,QAAAA,QAAQ,CAACC,MAAT,GAAkB,KAAlB;AACAD,QAAAA,QAAQ,CAACE,GAAT,GAAe,CAAf;AACAF,QAAAA,QAAQ,CAACG,WAAT,GAAuB,KAAvB;AACA5C,QAAAA,KAAK,CAACI,MAAN,CAAaiC,IAAb,CAAkBI,QAAlB,EA5CqB,CA8CrB;;AACAzC,QAAAA,KAAK,CAACQ,YAAN,CAAmB6B,IAAnB,CAAwBhB,QAAQ,CAACE,EAAjC;AA/CqB;;AAGvB,0DAAwB;AAAA;AA6CvB;AAhDsB;AAAA;AAAA;AAAA;AAAA;AAiDxB,GAlDa;AAmDdsB,EAAAA,KAAK,EAAE,eAASlC,IAAT,EAAemC,QAAf,EAAyB;AAC9BlD,IAAAA,MAAM,CAACkD,QAAD,CAAN,CAAiBT,IAAjB,CAAsB1B,IAAtB;AACD,GArDa;AAsDdoC,EAAAA,IAAI,EAAE,gBAAW;AACf,QAAIC,WAAW,GAAGpD,MAAM,CAACC,IAAP,CAAYD,MAAM,CAACC,IAAP,CAAYuB,MAAZ,GAAqB,CAAjC,CAAlB;AACAxB,IAAAA,MAAM,CAACC,IAAP,CAAYoD,GAAZ;AACA,SAAKJ,KAAL,CAAWjD,MAAM,CAACE,OAAlB,EAA2B,QAA3B;AACAF,IAAAA,MAAM,CAACE,OAAP,GAAiBkD,WAAjB;AACD,GA3Da;AA4DdE,EAAAA,IAAI,EAAE,gBAAW;AACf,QAAIF,WAAW,GAAGpD,MAAM,CAACG,MAAP,CAAcH,MAAM,CAACG,MAAP,CAAcqB,MAAd,GAAuB,CAArC,CAAlB;AACAxB,IAAAA,MAAM,CAACG,MAAP,CAAckD,GAAd;AACA,SAAKJ,KAAL,CAAWjD,MAAM,CAACE,OAAlB,EAA2B,MAA3B;AACAF,IAAAA,MAAM,CAACE,OAAP,GAAiBkD,WAAjB;AACD,GAjEa;AAkEdpC,EAAAA,WAAW,EAAE,uBAAW;AACtBhB,IAAAA,MAAM,CAACG,MAAP,GAAgB,EAAhB;AACA,QAAIoD,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe1D,MAAM,CAACE,OAAtB,CAAX,CAAlB;AACAF,IAAAA,MAAM,CAACC,IAAP,CAAYwC,IAAZ,CAAiBc,WAAjB;AACD,GAtEa;AAuEdI,EAAAA,UAAU,EAAE,oBAAS5C,IAAT,EAAeY,EAAf,EAAmBuB,QAAnB,EAA6B;AACvC,SAAKlC,WAAL;;AACA,QAAIW,EAAE,IAAIuB,QAAV,EAAoB;AAClB,UAAIU,UAAU,GAAG5D,MAAM,CAACE,OAAP,CAAeiB,IAAf,CAAoB,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACO,EAAJ,IAAUA,EAAd;AAAA,OAAvB,CAAjB;AACAiC,MAAAA,UAAU,CAACV,QAAD,CAAV,GAAuBnC,IAAvB;AACD,KAHD,MAGO;AACLf,MAAAA,MAAM,CAACE,OAAP,GAAiBa,IAAjB;AACD;AACF,GA/Ea;AAgFd8C,EAAAA,aAAa,EAAE,uBAAS9C,IAAT,EAAeY,EAAf,EAAmBuB,QAAnB,EAA6B;AAC1C,QAAIU,UAAU,GAAG5D,MAAM,CAACE,OAAP,CAAeiB,IAAf,CAAoB,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACO,EAAJ,IAAUA,EAAd;AAAA,KAAvB,CAAjB;AACAiC,IAAAA,UAAU,CAACV,QAAD,CAAV,GAAuBnC,IAAvB;AACD,GAnFa;AAoFd+C,EAAAA,aAAa,EAAE,uBAASnC,EAAT,EAAa;AAC1B,SAAKX,WAAL;AACA,QAAI+C,QAAQ,GAAG/D,MAAM,CAACE,OAAP,CAAe8D,SAAf,CAAyB,UAAA5C,GAAG;AAAA,aAAIA,GAAG,CAACO,EAAJ,IAAUA,EAAd;AAAA,KAA5B,CAAf;AACA3B,IAAAA,MAAM,CAACE,OAAP,CAAe+D,MAAf,CAAsBF,QAAtB,EAAgC,CAAhC;AACD,GAxFa;AAyFdG,EAAAA,WAAW,EAAE,qBAASvD,IAAT,EAAegB,EAAf,EAAmBwC,IAAnB,EAAyBpD,IAAzB,EAA+B;AAC1C,QAAIK,GAAG,GAAGhB,KAAK,CAACO,IAAD,CAAL,CAAYQ,IAAZ,CAAiB,UAAAiD,CAAC;AAAA,aAAIA,CAAC,CAACzC,EAAF,IAAQA,EAAZ;AAAA,KAAlB,CAAV;AACAP,IAAAA,GAAG,CAAC+C,IAAD,CAAH,GAAYpD,IAAZ;AACD;AA5Fa,CAAhB;AA+FA,eAAe;AACbf,EAAAA,MAAM,EAANA,MADa;AAEbI,EAAAA,KAAK,EAALA,KAFa;AAGbS,EAAAA,OAAO,EAAPA;AAHa,CAAf","sourcesContent":["import { reactive } from 'vue'\r\n\r\nconst states = reactive({\r\n  past: [],\r\n  current: [],\r\n  future: [],\r\n})\r\n\r\n\r\nconst cache = reactive({\r\n  raw: [],\r\n  splines: {\r\n              raw: [],\r\n              index: [],\r\n           },\r\n  index: [],\r\n  modals: [],\r\n  plots: [{ value: 1, name: 'Plot 1' },\r\n          { value: 2, name: 'Plot 2' }],\r\n  loadSequence: [],\r\n})\r\n\r\nconst methods = {\r\n  loadData: function(data) {\r\n    this.saveCurrent()\r\n\r\n    for (const set of data) {\r\n      let existingSet = states.current.find(obj => obj.name == set.name)\r\n      if (existingSet) {\r\n        let n = states.current.filter(obj => obj.name.split(' (')[0] == set.name).length\r\n        set.name = set.name + ' (' + n + ')'\r\n      }\r\n\r\n      let newState = new Object()\r\n      // set IDs are random 5 digit numbers\r\n      let id = Math.floor(Math.random() * (99999 - 10000 + 1)) + 10000\r\n\r\n      // default state values\r\n      newState.id = id\r\n      newState.name = set.name\r\n      newState.file = set.fileName\r\n      newState.color = '#FF0000'\r\n      newState.colorState = true\r\n\r\n      newState.rawPointsActive = false\r\n      newState.rawSplineFreq = false\r\n      newState.rawPlotLocation = 1\r\n\r\n      newState.indexPointsFreq = false\r\n      newState.indexSplineFreq = false\r\n      newState.indexPlotLocation = 1\r\n\r\n      states.current.push(newState)\r\n\r\n      // cache data\r\n      let newPoints = new Object()\r\n      newPoints.id = id\r\n      newPoints.x = set.x\r\n      newPoints.y = set.y\r\n      cache.raw.push(newPoints)\r\n\r\n      // default active cache values\r\n      let newModal = new Object()\r\n      newModal.id = id\r\n      newModal.active = false\r\n      newModal.top = 0\r\n      newModal.outOfBounds = false\r\n      cache.modals.push(newModal)\r\n\r\n      // establish default load sequence\r\n      cache.loadSequence.push(newState.id)\r\n    }\r\n  },\r\n  addTo: function(data, property) {\r\n    states[property].push(data)\r\n  },\r\n  undo: function() {\r\n    let recentState = states.past[states.past.length - 1]\r\n    states.past.pop()\r\n    this.addTo(states.current, 'future')\r\n    states.current = recentState\r\n  },\r\n  redo: function() {\r\n    let recentState = states.future[states.future.length - 1]\r\n    states.future.pop()\r\n    this.addTo(states.current, 'past')\r\n    states.current = recentState\r\n  },\r\n  saveCurrent: function() {\r\n    states.future = []\r\n    let currentCopy = JSON.parse(JSON.stringify(states.current))\r\n    states.past.push(currentCopy)\r\n  },\r\n  newCurrent: function(data, id, property) {\r\n    this.saveCurrent()\r\n    if (id && property) {\r\n      let currentSet = states.current.find(obj => obj.id == id)\r\n      currentSet[property] = data\r\n    } else {\r\n      states.current = data\r\n    }\r\n  },\r\n  modifyCurrent: function(data, id, property) {\r\n    let currentSet = states.current.find(obj => obj.id == id)\r\n    currentSet[property] = data\r\n  },\r\n  removeCurrent: function(id) {\r\n    this.saveCurrent()\r\n    let setIndex = states.current.findIndex(obj => obj.id == id)\r\n    states.current.splice(setIndex, 1)\r\n  },\r\n  updateCache: function(name, id, prop, data) {\r\n    let obj = cache[name].find(o => o.id == id)\r\n    obj[prop] = data\r\n  }\r\n}\r\n\r\nexport default {\r\n  states,\r\n  cache,\r\n  methods\r\n}\r\n"]}]}