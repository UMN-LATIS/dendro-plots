{"remainingRequest":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\src\\composables\\formatData.js","dependencies":[{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\src\\composables\\formatData.js","mtime":1628445422484},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L1VzZXJzL0pUaG9ybmVVTU4vRG9jdW1lbnRzL0dpdEh1Yi9kZW5kcm8tcGxvdHMvcGxvdHRpbmctYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Cgp2YXIgZm9ybWF0RGF0YU9iakFycmF5ID0gZnVuY3Rpb24gZm9ybWF0RGF0YU9iakFycmF5KGZpbGVEYXRhQXJyYXkpIHsKICB2YXIgYXJyID0gbmV3IEFycmF5KCk7CiAgLyoNCiAgICBmaWxlRGF0YSBoYXMgZm9ybWF0Og0KICAgIFt5ZWFyLCBuYW1lQSwgbmFtZUIsIC4uLl0sDQogICAgW3llYXIxLCB3aWR0aDFBLCB3aWR0aDFCLCAuLi5dLA0KICAgICAgY29udmVydCBpdCB0byBQbG90bHkgZGF0YSBvYmplY3QgZm9ybWF0Og0KICAgIG9iaiA9IHsNCiAgICAgIHg6IFsuLi5dLCAoeWVhcnMpDQogICAgICB5OiBbLi4uXSwgKHdpZHRocykNCiAgICAgIG5hbWU6ICduYW1lQScsDQogICAgICAuLi4NCiAgICB9DQogICovCgogIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihmaWxlRGF0YUFycmF5KSwKICAgICAgX3N0ZXA7CgogIHRyeSB7CiAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICB2YXIgZmlsZURhdGEgPSBfc3RlcC52YWx1ZTsKCiAgICAgIGZvciAodmFyIGNvbCA9IDE7IGNvbCA8IGZpbGVEYXRhWzBdLmxlbmd0aDsgY29sKyspIHsKICAgICAgICB2YXIgeWVhckFycmF5ID0gW107CiAgICAgICAgdmFyIHdpZHRoQXJyYXkgPSBbXTsKCiAgICAgICAgZm9yICh2YXIgcm93ID0gMTsgcm93IDwgZmlsZURhdGEubGVuZ3RoOyByb3crKykgewogICAgICAgICAgdmFyIHllYXIgPSBmaWxlRGF0YVtyb3ddWzBdOwogICAgICAgICAgdmFyIHdpZHRoID0gZmlsZURhdGFbcm93XVtjb2xdOwoKICAgICAgICAgIGlmICh3aWR0aCA+PSAwKSB7CiAgICAgICAgICAgIHllYXJBcnJheS5wdXNoKHBhcnNlSW50KHllYXIpKTsKICAgICAgICAgICAgd2lkdGhBcnJheS5wdXNoKHBhcnNlRmxvYXQod2lkdGgpKTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHZhciBvYmogPSBuZXcgT2JqZWN0KCk7CiAgICAgICAgb2JqLm5hbWUgPSBmaWxlRGF0YVswXVtjb2xdOwogICAgICAgIG9iai54ID0geWVhckFycmF5OwogICAgICAgIG9iai55ID0gd2lkdGhBcnJheTsKICAgICAgICBhcnIucHVzaChvYmopOwogICAgICB9CiAgICB9CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBfaXRlcmF0b3IuZShlcnIpOwogIH0gZmluYWxseSB7CiAgICBfaXRlcmF0b3IuZigpOwogIH0KCiAgcmV0dXJuIGFycjsKfTsKCmV4cG9ydCBkZWZhdWx0IGZvcm1hdERhdGFPYmpBcnJheTs="},{"version":3,"sources":["C:/Users/JThorneUMN/Documents/GitHub/dendro-plots/plotting-app/src/composables/formatData.js"],"names":["formatDataObjArray","fileDataArray","arr","Array","fileData","col","length","yearArray","widthArray","row","year","width","push","parseInt","parseFloat","obj","Object","name","x","y"],"mappings":";;;AAAA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAAUC,aAAV,EAAyB;AAClD,MAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAboD,6CAe7BF,aAf6B;AAAA;;AAAA;AAelD,wDAAoC;AAAA,UAA3BG,QAA2B;;AAClC,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGD,QAAQ,CAAC,CAAD,CAAR,CAAYE,MAApC,EAA4CD,GAAG,EAA/C,EAAmD;AACjD,YAAIE,SAAS,GAAG,EAAhB;AACA,YAAIC,UAAU,GAAG,EAAjB;;AACA,aAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGL,QAAQ,CAACE,MAAjC,EAAyCG,GAAG,EAA5C,EAAgD;AAC9C,cAAIC,IAAI,GAAGN,QAAQ,CAACK,GAAD,CAAR,CAAc,CAAd,CAAX;AACA,cAAIE,KAAK,GAAGP,QAAQ,CAACK,GAAD,CAAR,CAAcJ,GAAd,CAAZ;;AACA,cAAIM,KAAK,IAAI,CAAb,EAAgB;AACdJ,YAAAA,SAAS,CAACK,IAAV,CAAeC,QAAQ,CAACH,IAAD,CAAvB;AACAF,YAAAA,UAAU,CAACI,IAAX,CAAgBE,UAAU,CAACH,KAAD,CAA1B;AACD;AACF;;AACD,YAAII,GAAG,GAAG,IAAIC,MAAJ,EAAV;AACAD,QAAAA,GAAG,CAACE,IAAJ,GAAWb,QAAQ,CAAC,CAAD,CAAR,CAAYC,GAAZ,CAAX;AACAU,QAAAA,GAAG,CAACG,CAAJ,GAAQX,SAAR;AACAQ,QAAAA,GAAG,CAACI,CAAJ,GAAQX,UAAR;AAEAN,QAAAA,GAAG,CAACU,IAAJ,CAASG,GAAT;AACD;AACF;AAlCiD;AAAA;AAAA;AAAA;AAAA;;AAoClD,SAAOb,GAAP;AACD,CArCD;;AAuCA,eAAeF,kBAAf","sourcesContent":["const formatDataObjArray = function (fileDataArray) {\r\n  var arr = new Array()\r\n  /*\r\n    fileData has format:\r\n    [year, nameA, nameB, ...],\r\n    [year1, width1A, width1B, ...],\r\n\r\n    convert it to Plotly data object format:\r\n    obj = {\r\n      x: [...], (years)\r\n      y: [...], (widths)\r\n      name: 'nameA',\r\n      ...\r\n    }\r\n  */\r\n  for (let fileData of fileDataArray) {\r\n    for (let col = 1; col < fileData[0].length; col++) {\r\n      var yearArray = []\r\n      var widthArray = []\r\n      for (let row = 1; row < fileData.length; row++) {\r\n        let year = fileData[row][0]\r\n        let width = fileData[row][col]\r\n        if (width >= 0) {\r\n          yearArray.push(parseInt(year))\r\n          widthArray.push(parseFloat(width))\r\n        }\r\n      }\r\n      var obj = new Object()\r\n      obj.name = fileData[0][col]\r\n      obj.x = yearArray\r\n      obj.y = widthArray\r\n\r\n      arr.push(obj)\r\n    }\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nexport default formatDataObjArray\r\n"]}]}