{"remainingRequest":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\src\\components\\DataComponents\\Sort.vue?vue&type=style&index=0&id=6aed08e6&lang=css","dependencies":[{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\src\\components\\DataComponents\\Sort.vue","mtime":1629991926979},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1627652267000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1627652267000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIC5zaG93IHsNCiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7DQogICAgcG9pbnRlci1ldmVudHM6IGF1dG8gIWltcG9ydGFudDsNCiAgfQ0KDQogIC5oaWRlIHsNCiAgICBvcGFjaXR5OiAwOw0KICAgIHBvaW50ZXItZXZlbnRzOiBub25lOw0KICB9DQoNCiAgLmRyb3Bkb3duLCAuc2hvdzpob3ZlciB7DQogICAgY3Vyc29yOiBub3JtYWw7DQogIH0NCg0KICAuZHJvcGRvd246aG92ZXIgLmRyb3Bkb3duLWNvbnRlbnQgew0KICAgIGRpc3BsYXk6IGlubGluZTsNCiAgfQ0KDQogIC5kcm9wZG93bi1jb250ZW50IHsNCiAgICBkaXNwbGF5OiBub25lOw0KICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7DQogICAgZm9udC1mYW1pbHk6IFNhbnMtc2VyaWY7DQogICAgZm9udC1zaXplOiAxMnB4Ow0KICAgIGNvbG9yOiBibGFjazsNCiAgICBwYWRkaW5nOiA2cHg7DQogICAgbWFyZ2luOiAwOw0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICBtYXJnaW4tbGVmdDogLTE2cHg7DQogICAgbWFyZ2luLXRvcDogMjJweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICB6LWluZGV4OiA5OTk5OTk7DQogIH0NCg=="},{"version":3,"sources":["C:\\Users\\JThorneUMN\\Documents\\GitHub\\dendro-plots\\plotting-app\\src\\components\\DataComponents\\Sort.vue"],"names":[],"mappings":"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","file":"C:/Users/JThorneUMN/Documents/GitHub/dendro-plots/plotting-app/src/components/DataComponents/Sort.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"dropdown\">\r\n    <img src=\"../../assets/sort-button.png\" class=\"hide\"\r\n         :class=\"{ show: store.cache.loadSequence.length > 1 }\"\r\n         @click=\"sort\">\r\n    <div class=\"dropdown-content\">\r\n      <span> {{ sortText[sortType] }} </span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    inject: ['store'],\r\n    data() {\r\n      return {\r\n        sortType: 0,\r\n        sortText: ['Sort A -> Z', 'Sort Z -> A', 'Sort by load sequence'],\r\n      }\r\n    },\r\n    methods: {\r\n      alphaNumeric: function(arr, returnA, returnB) {\r\n        return arr.sort((objA, objB) => {\r\n                let nameA = objA.name.toUpperCase()\r\n                let nameB = objB.name.toUpperCase()\r\n                if (nameA < nameB) {\r\n                  return returnA;\r\n                } else if (nameA > nameB) {\r\n                  return returnB;\r\n                }\r\n                return 0;\r\n              })\r\n      },\r\n      sort: function() {\r\n        /*\r\n          Sorting type code:\r\n            1 = A -> Z\r\n            2 = Z -> A\r\n            3 = load order\r\n        */\r\n        let currentCopy = JSON.parse(JSON.stringify(this.store.states.currentStates))\r\n        if (this.sortType == 0) {\r\n          this.alphaNumeric(currentCopy, -1, 1)\r\n        } else if (this.sortType == 1) {\r\n          this.alphaNumeric(currentCopy, 1, -1)\r\n        } else if (this.sortType == 2) {\r\n          let arr = new Array()\r\n          for (const id of this.store.cache.loadSequence) {\r\n            const obj = currentCopy.find(o => o.id == id)\r\n            if (obj) {\r\n              arr.push(obj)\r\n            }\r\n          }\r\n          currentCopy = arr\r\n        }\r\n        this.store.methods.newCurrent(currentCopy)\r\n\r\n        this.sortType ++\r\n        if (this.sortType > 2) {\r\n          this.sortType = 0\r\n        }\r\n      }\r\n    },\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .show {\r\n    opacity: 1 !important;\r\n    pointer-events: auto !important;\r\n  }\r\n\r\n  .hide {\r\n    opacity: 0;\r\n    pointer-events: none;\r\n  }\r\n\r\n  .dropdown, .show:hover {\r\n    cursor: normal;\r\n  }\r\n\r\n  .dropdown:hover .dropdown-content {\r\n    display: inline;\r\n  }\r\n\r\n  .dropdown-content {\r\n    display: none;\r\n    font-weight: normal;\r\n    font-family: Sans-serif;\r\n    font-size: 12px;\r\n    color: black;\r\n    padding: 6px;\r\n    margin: 0;\r\n    position: absolute;\r\n    margin-left: -16px;\r\n    margin-top: 22px;\r\n    background-color: #f6f6f6;\r\n    border: 1px solid black;\r\n    border-radius: 2px;\r\n    z-index: 999999;\r\n  }\r\n</style>\r\n"]}]}